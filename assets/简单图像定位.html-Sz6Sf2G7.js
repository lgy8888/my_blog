import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,f as t}from"./app-OTaO6_y0.js";const p={},o=t(`<h1 id="简单图像定位" tabindex="-1"><a class="header-anchor" href="#简单图像定位" aria-hidden="true">#</a> 简单图像定位</h1><h2 id="常见的图像处理任务" tabindex="-1"><a class="header-anchor" href="#常见的图像处理任务" aria-hidden="true">#</a> 常见的图像处理任务</h2><ul><li><strong>分类（Classification）</strong><ul><li>给定一副图像，用计算机模型预测图片中有什么对象</li><li>最基础最核心的技术</li></ul></li></ul><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230812111713274.png" alt="image-20230812131322454" tabindex="0" loading="lazy"><figcaption>image-20230812131322454</figcaption></figure><ul><li><strong>分类+定位（Classification+Localization）</strong><ul><li>不仅需要我们知道图片中的对象是什么，还要在对象的附近画一个边框，确定该对象所处的位置</li></ul></li></ul><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230812131259387.png" alt="image-20230812131259387" tabindex="0" loading="lazy"><figcaption>image-20230812131259387</figcaption></figure><ul><li><strong>语义分割（Semantic segmentation）</strong><ul><li>区别到图像中每一单像素点，而不仅仅是矩形框框住</li></ul></li></ul><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230812131237271.png" alt="image-20230812131237271" tabindex="0" loading="lazy"><figcaption>image-20230812131237271</figcaption></figure><ul><li><strong>目标检测（Object localization）</strong><ul><li>目标检测简单来说就是回答图片里面有什么，分别在哪里，用矩形框框起来</li></ul></li></ul><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230812132152853.png" alt="image-20230812131505403" tabindex="0" loading="lazy"><figcaption>image-20230812131505403</figcaption></figure><ul><li><strong>实例分割（segment individual object instances）</strong><ul><li>实例分割是目标检测和语义分割的结合</li><li>相对目标检测的边界框，实例分割可精确到物体边缘</li><li>相对语义分割，实例分割需要标注出图上同一物体的不同个体</li></ul></li></ul><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230813132958720.png" alt="image-20230812131727550" tabindex="0" loading="lazy"><figcaption>image-20230812131727550</figcaption></figure><h2 id="图像定位" tabindex="-1"><a class="header-anchor" href="#图像定位" aria-hidden="true">#</a> 图像定位</h2><ul><li>定位需要输出四个数字 $(x,y,w,h)$ ，图像中某一个点的坐标$(x,y)$，以及图像的宽度和高度</li><li>有了这四个数字，我们可以很容易找到边框</li></ul><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230812131727550.png" alt="image-20230812132152853" tabindex="0" loading="lazy"><figcaption>image-20230812132152853</figcaption></figure><ul><li>图像定位步骤（有监督的) <ul><li>需要一个支持图像定位训练的数据集 -&gt; 有标注出定位框四个点的</li><li>将数据集初始化为两部分 <ul><li><code>imgs</code> -&gt; 一个包含所有图片地址的列表</li><li><code>labels</code> -&gt; 一个列表，包含所有图片的定位框信息 <ul><li>图片定位框信息 -&gt; 一个列表，包含四个定位框边界到图片边界的上下左右比值 <code>[xmin/width, ymin/height, xmax/width, ymax/height]</code></li></ul></li></ul></li><li>创建一个拥有四个fc层的模型 -&gt; 能够输出四个值</li><li>图像定位本质上是一个回归问题 -&gt; 希望输出一个预测值能够接近真实值 -&gt; 距离 <ul><li>使用均方差损失函数：<code>loss_fn = MSELoss()</code></li><li>只计算损失，不计算准确率（训练的是距离，准确率没有意义）</li></ul></li><li>模型可使用预训练模型<code>ResNet101</code></li></ul></li></ul><h2 id="图像定位案例" tabindex="-1"><a class="header-anchor" href="#图像定位案例" aria-hidden="true">#</a> 图像定位案例</h2><h3 id="数据预处理" tabindex="-1"><a class="header-anchor" href="#数据预处理" aria-hidden="true">#</a> 数据预处理</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>BATCH_SIZE <span class="token operator">=</span> <span class="token number">32</span>

all_img_paths <span class="token operator">=</span> glob<span class="token punctuation">.</span>glob<span class="token punctuation">(</span><span class="token string">r&#39;..\\..\\12-15\\第12章\\dataset\\images\\*.jpg&#39;</span><span class="token punctuation">)</span>
all_xml_paths <span class="token operator">=</span> glob<span class="token punctuation">.</span>glob<span class="token punctuation">(</span><span class="token string">r&#39;..\\..\\12-15\\第12章\\dataset\\annotations\\xmls\\*.xml&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token builtin">len</span><span class="token punctuation">(</span>all_img_paths<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>all_xml_paths<span class="token punctuation">)</span>  <span class="token comment"># 并没有全部标注</span>
<span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token number">7390</span><span class="token punctuation">,</span> <span class="token number">3686</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>切片获取图片名称</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">getImgName</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">return</span> path<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;\\\\&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>根据xml标注的文件筛选标注过的图片 <ol><li>遍历所有图片地址</li><li>判断图片名称是否在有标注的图片名称列表中</li><li>遍历所有标签地址，切片为图片名称并生成有标注的图片名称列表</li></ol></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 切片获取图片名称</span>
<span class="token keyword">def</span> <span class="token function">getImgName</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">return</span> path<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;\\\\&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

useful_img_paths <span class="token operator">=</span> <span class="token punctuation">[</span>img_path <span class="token keyword">for</span> img_path <span class="token keyword">in</span> all_img_paths  
                    <span class="token keyword">if</span> getImgName<span class="token punctuation">(</span>img_path<span class="token punctuation">)</span> <span class="token keyword">in</span> 
                    <span class="token punctuation">[</span>getImgName<span class="token punctuation">(</span>xml_path<span class="token punctuation">)</span> <span class="token keyword">for</span> xml_path <span class="token keyword">in</span> all_xml_paths<span class="token punctuation">]</span><span class="token punctuation">]</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token builtin">len</span><span class="token punctuation">(</span>useful_img_paths<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>all_xml_paths<span class="token punctuation">)</span>
<span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token number">3686</span><span class="token punctuation">,</span> <span class="token number">3686</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>将四个<code>x,y</code>的固定值转化为比例</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">to_label</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>
    xml <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">r&#39;{}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
    sel <span class="token operator">=</span> etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span>xml<span class="token punctuation">)</span>

    xmin <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>sel<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//bndbox/xmin/text()&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    ymin <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>sel<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//bndbox/ymin/text()&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    xmax <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>sel<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//bndbox/xmax/text()&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    ymax <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>sel<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//bndbox/ymax/text()&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    
    height <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>sel<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//size/height/text()&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    width <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>sel<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//size/width/text()&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    
    <span class="token keyword">return</span> <span class="token punctuation">[</span>xmin <span class="token operator">/</span> width<span class="token punctuation">,</span> ymin <span class="token operator">/</span> height<span class="token punctuation">,</span> xmax <span class="token operator">/</span> width<span class="token punctuation">,</span> ymax <span class="token operator">/</span> height<span class="token punctuation">]</span>

labels <span class="token operator">=</span> <span class="token punctuation">[</span>to_label<span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token keyword">for</span> p <span class="token keyword">in</span> all_xml_paths<span class="token punctuation">]</span>   <span class="token comment"># 将比例列表放进labels列表里</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>打乱图片和标签</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>index <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>permutation<span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>useful_img_paths<span class="token punctuation">)</span><span class="token punctuation">)</span>

imgs <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>useful_img_paths<span class="token punctuation">)</span><span class="token punctuation">[</span>index<span class="token punctuation">]</span>
labels <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>labels<span class="token punctuation">)</span><span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>切片分出训练集和验证集</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>i <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>imgs<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.8</span><span class="token punctuation">)</span>
train_imgs <span class="token operator">=</span> imgs<span class="token punctuation">[</span><span class="token punctuation">:</span>i<span class="token punctuation">]</span>
train_labels <span class="token operator">=</span> labels<span class="token punctuation">[</span><span class="token punctuation">:</span>i<span class="token punctuation">]</span>

test_imgs <span class="token operator">=</span> imgs<span class="token punctuation">[</span>i<span class="token punctuation">:</span><span class="token punctuation">]</span>
test_labels <span class="token operator">=</span> labels<span class="token punctuation">[</span>i<span class="token punctuation">:</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>transform <span class="token operator">=</span> transforms<span class="token punctuation">.</span>Compose<span class="token punctuation">(</span><span class="token punctuation">[</span>
    transforms<span class="token punctuation">.</span>Resize<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">224</span><span class="token punctuation">,</span> <span class="token number">224</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>定义数据集子类</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Oxford_dataset</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>Dataset<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> img_paths<span class="token punctuation">,</span> label_lists<span class="token punctuation">,</span> transform<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>img_paths <span class="token operator">=</span> img_paths
        self<span class="token punctuation">.</span>label_lists <span class="token operator">=</span> label_lists
        self<span class="token punctuation">.</span>transform <span class="token operator">=</span> transform

    <span class="token keyword">def</span> <span class="token function">__getitem__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">:</span>
        img <span class="token operator">=</span> self<span class="token punctuation">.</span>img_paths<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
        left<span class="token punctuation">,</span> bottom<span class="token punctuation">,</span> right<span class="token punctuation">,</span> top <span class="token operator">=</span> self<span class="token punctuation">.</span>label_lists<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
        pil_img <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">.</span>convert<span class="token punctuation">(</span><span class="token string">&#39;RGB&#39;</span><span class="token punctuation">)</span>
        img_tensor <span class="token operator">=</span> self<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>pil_img<span class="token punctuation">)</span>
        <span class="token keyword">return</span> img_tensor<span class="token punctuation">,</span> left<span class="token punctuation">,</span> bottom<span class="token punctuation">,</span> right<span class="token punctuation">,</span> top
    
    <span class="token keyword">def</span> <span class="token function">__len__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>img_paths<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>创建数据集和加载器</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>train_ds <span class="token operator">=</span> Oxford_dataset<span class="token punctuation">(</span>train_imgs<span class="token punctuation">,</span> train_labels<span class="token punctuation">,</span> transform<span class="token punctuation">)</span>
test_ds <span class="token operator">=</span> Oxford_dataset<span class="token punctuation">(</span>test_imgs<span class="token punctuation">,</span> test_labels<span class="token punctuation">,</span> transform<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>train_dl <span class="token operator">=</span> data<span class="token punctuation">.</span>DataLoader<span class="token punctuation">(</span>train_ds<span class="token punctuation">,</span> batch_size<span class="token operator">=</span>BATCH_SIZE<span class="token punctuation">,</span> shuffle<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
test_dl <span class="token operator">=</span> data<span class="token punctuation">.</span>DataLoader<span class="token punctuation">(</span>test_ds<span class="token punctuation">,</span> batch_size<span class="token operator">=</span>BATCH_SIZE<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>数据集预览</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>imgs_batch<span class="token punctuation">,</span> left_batch<span class="token punctuation">,</span> bottom_batch<span class="token punctuation">,</span> right_batch<span class="token punctuation">,</span> top_batch <span class="token operator">=</span> <span class="token builtin">next</span><span class="token punctuation">(</span><span class="token builtin">iter</span><span class="token punctuation">(</span>train_dl<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> i<span class="token punctuation">,</span> <span class="token punctuation">(</span>img<span class="token punctuation">,</span> left<span class="token punctuation">,</span> bottom<span class="token punctuation">,</span> right<span class="token punctuation">,</span> top<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>imgs_batch<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> left_batch<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                                                        bottom_batch<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> right_batch<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> top_batch<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    img <span class="token operator">=</span> img<span class="token punctuation">.</span>permute<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">)</span>
    xmin<span class="token punctuation">,</span> ymin<span class="token punctuation">,</span> xmax<span class="token punctuation">,</span> ymax <span class="token operator">=</span> left <span class="token operator">*</span> <span class="token number">224</span><span class="token punctuation">,</span> bottom <span class="token operator">*</span> <span class="token number">224</span><span class="token punctuation">,</span> right <span class="token operator">*</span> <span class="token number">224</span><span class="token punctuation">,</span> top <span class="token operator">*</span> <span class="token number">224</span>
    <span class="token comment"># 根据四个点画框</span>
    rect <span class="token operator">=</span> Rectangle<span class="token punctuation">(</span><span class="token punctuation">(</span>xmin<span class="token punctuation">,</span> ymin<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>xmax <span class="token operator">-</span> xmin<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ymax <span class="token operator">-</span> ymin<span class="token punctuation">)</span><span class="token punctuation">,</span> fill<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">)</span>
    ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>gca<span class="token punctuation">(</span><span class="token punctuation">)</span>
    ax<span class="token punctuation">.</span>axes<span class="token punctuation">.</span>add_patch<span class="token punctuation">(</span>rect<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230812131505403.png" alt="image-20230812153025996" tabindex="0" loading="lazy"><figcaption>image-20230812153025996</figcaption></figure><h3 id="创建定位模型" tabindex="-1"><a class="header-anchor" href="#创建定位模型" aria-hidden="true">#</a> 创建定位模型</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>resnet101 <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>models<span class="token punctuation">.</span>resnet101<span class="token punctuation">(</span>weights<span class="token operator">=</span>ResNet101_Weights<span class="token punctuation">.</span>IMAGENET1K_V1<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">My_ResNet</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> resnet<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span>My_ResNet<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment"># 提取预训练模型的卷积基</span>
        self<span class="token punctuation">.</span>conv_base <span class="token operator">=</span> nn<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">list</span><span class="token punctuation">(</span>resnet<span class="token punctuation">.</span>children<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token comment"># 四个输出端口</span>
        self<span class="token punctuation">.</span>fc1 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>resnet<span class="token punctuation">.</span>fc<span class="token punctuation">.</span>in_features<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>fc2 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>resnet<span class="token punctuation">.</span>fc<span class="token punctuation">.</span>in_features<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>fc3 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>resnet<span class="token punctuation">.</span>fc<span class="token punctuation">.</span>in_features<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>fc4 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>resnet<span class="token punctuation">.</span>fc<span class="token punctuation">.</span>in_features<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token builtin">input</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        x <span class="token operator">=</span> self<span class="token punctuation">.</span>conv_base<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">)</span>
        x1 <span class="token operator">=</span> self<span class="token punctuation">.</span>fc1<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
        x2 <span class="token operator">=</span> self<span class="token punctuation">.</span>fc2<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
        x3 <span class="token operator">=</span> self<span class="token punctuation">.</span>fc3<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
        x4 <span class="token operator">=</span> self<span class="token punctuation">.</span>fc4<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
        <span class="token keyword">return</span> x1<span class="token punctuation">,</span> x2<span class="token punctuation">,</span> x3<span class="token punctuation">,</span> x4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="模型训练" tabindex="-1"><a class="header-anchor" href="#模型训练" aria-hidden="true">#</a> 模型训练</h3><ul><li>定义训练函数</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">train</span><span class="token punctuation">(</span>model<span class="token punctuation">,</span> train_dl<span class="token punctuation">,</span> loss_fn<span class="token punctuation">,</span> opt<span class="token punctuation">,</span> exp_lr_scheduler<span class="token punctuation">)</span><span class="token punctuation">:</span>
    running_loss <span class="token operator">=</span> <span class="token number">0</span>

    model<span class="token punctuation">.</span>train<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> x<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> y2<span class="token punctuation">,</span> y3<span class="token punctuation">,</span> y4 <span class="token keyword">in</span> train_dl<span class="token punctuation">:</span>
        <span class="token keyword">if</span> torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            x<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> y2<span class="token punctuation">,</span> y3<span class="token punctuation">,</span> y4 <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span>to<span class="token punctuation">(</span><span class="token string">&#39;cuda&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                 y1<span class="token punctuation">.</span>to<span class="token punctuation">(</span><span class="token string">&#39;cuda&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> y2<span class="token punctuation">.</span>to<span class="token punctuation">(</span><span class="token string">&#39;cuda&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                 y3<span class="token punctuation">.</span>to<span class="token punctuation">(</span><span class="token string">&#39;cuda&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> y4<span class="token punctuation">.</span>to<span class="token punctuation">(</span><span class="token string">&#39;cuda&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        y_pred1<span class="token punctuation">,</span> y_pred2<span class="token punctuation">,</span> y_pred3<span class="token punctuation">,</span> y_pred4 <span class="token operator">=</span> model<span class="token punctuation">(</span>x<span class="token punctuation">)</span>

        loss1 <span class="token operator">=</span> loss_fn<span class="token punctuation">(</span>y_pred1<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> y1<span class="token punctuation">)</span>
        loss2 <span class="token operator">=</span> loss_fn<span class="token punctuation">(</span>y_pred2<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> y2<span class="token punctuation">)</span>
        loss3 <span class="token operator">=</span> loss_fn<span class="token punctuation">(</span>y_pred3<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> y3<span class="token punctuation">)</span>
        loss4 <span class="token operator">=</span> loss_fn<span class="token punctuation">(</span>y_pred4<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> y4<span class="token punctuation">)</span>
        loss <span class="token operator">=</span> loss1 <span class="token operator">+</span> loss2 <span class="token operator">+</span> loss3 <span class="token operator">+</span> loss4
        opt<span class="token punctuation">.</span>zero_grad<span class="token punctuation">(</span><span class="token punctuation">)</span>
        loss<span class="token punctuation">.</span>backward<span class="token punctuation">(</span><span class="token punctuation">)</span>
        opt<span class="token punctuation">.</span>step<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">with</span> torch<span class="token punctuation">.</span>no_grad<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            running_loss <span class="token operator">+=</span> loss<span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span>
    exp_lr_scheduler<span class="token punctuation">.</span>step<span class="token punctuation">(</span><span class="token punctuation">)</span>
    epoch_loss <span class="token operator">=</span> running_loss <span class="token operator">/</span> <span class="token builtin">len</span><span class="token punctuation">(</span>train_dl<span class="token punctuation">.</span>dataset<span class="token punctuation">)</span>
    <span class="token keyword">return</span> epoch_loss
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">test</span><span class="token punctuation">(</span>model<span class="token punctuation">,</span> test_dl<span class="token punctuation">,</span> loss_fn<span class="token punctuation">)</span><span class="token punctuation">:</span>
    test_running_loss <span class="token operator">=</span> <span class="token number">0</span>

    model<span class="token punctuation">.</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">with</span> torch<span class="token punctuation">.</span>no_grad<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> x<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> y2<span class="token punctuation">,</span> y3<span class="token punctuation">,</span> y4 <span class="token keyword">in</span> test_dl<span class="token punctuation">:</span>
            <span class="token keyword">if</span> torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                x<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> y2<span class="token punctuation">,</span> y3<span class="token punctuation">,</span> y4 <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span>to<span class="token punctuation">(</span><span class="token string">&#39;cuda&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                     y1<span class="token punctuation">.</span>to<span class="token punctuation">(</span><span class="token string">&#39;cuda&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> y2<span class="token punctuation">.</span>to<span class="token punctuation">(</span><span class="token string">&#39;cuda&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                     y3<span class="token punctuation">.</span>to<span class="token punctuation">(</span><span class="token string">&#39;cuda&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> y4<span class="token punctuation">.</span>to<span class="token punctuation">(</span><span class="token string">&#39;cuda&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            y_pred1<span class="token punctuation">,</span> y_pred2<span class="token punctuation">,</span> y_pred3<span class="token punctuation">,</span> y_pred4 <span class="token operator">=</span> model<span class="token punctuation">(</span>x<span class="token punctuation">)</span>

            loss1 <span class="token operator">=</span> loss_fn<span class="token punctuation">(</span>y_pred1<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> y1<span class="token punctuation">)</span>
            loss2 <span class="token operator">=</span> loss_fn<span class="token punctuation">(</span>y_pred2<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> y2<span class="token punctuation">)</span>
            loss3 <span class="token operator">=</span> loss_fn<span class="token punctuation">(</span>y_pred3<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> y3<span class="token punctuation">)</span>
            loss4 <span class="token operator">=</span> loss_fn<span class="token punctuation">(</span>y_pred4<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> y4<span class="token punctuation">)</span>
            loss <span class="token operator">=</span> loss1 <span class="token operator">+</span> loss2 <span class="token operator">+</span> loss3 <span class="token operator">+</span> loss4
            test_running_loss <span class="token operator">+=</span> loss<span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span>

    epoch_test_loss <span class="token operator">=</span> test_running_loss <span class="token operator">/</span> <span class="token builtin">len</span><span class="token punctuation">(</span>test_dl<span class="token punctuation">.</span>dataset<span class="token punctuation">)</span>
    <span class="token keyword">return</span> epoch_test_loss
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">fit</span><span class="token punctuation">(</span>epoch<span class="token punctuation">,</span> model<span class="token punctuation">,</span> train_dl<span class="token punctuation">,</span> test_dl<span class="token punctuation">,</span> loss_fn<span class="token punctuation">,</span> opt<span class="token punctuation">,</span> exp_lr_scheduler<span class="token punctuation">)</span><span class="token punctuation">:</span>
    epoch_loss <span class="token operator">=</span> train<span class="token punctuation">(</span>model<span class="token punctuation">,</span> train_dl<span class="token punctuation">,</span> loss_fn<span class="token punctuation">,</span> opt<span class="token punctuation">,</span> exp_lr_scheduler<span class="token punctuation">)</span>
    epoch_test_loss <span class="token operator">=</span> test<span class="token punctuation">(</span>model<span class="token punctuation">,</span> test_dl<span class="token punctuation">,</span> loss_fn<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;epoch: &#39;</span><span class="token punctuation">,</span> epoch<span class="token punctuation">,</span>
          <span class="token string">&#39;loss: &#39;</span><span class="token punctuation">,</span> <span class="token builtin">round</span><span class="token punctuation">(</span>epoch_loss<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token string">&#39;test_loss: &#39;</span><span class="token punctuation">,</span> <span class="token builtin">round</span><span class="token punctuation">(</span>epoch_test_loss<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token punctuation">)</span>
    <span class="token keyword">return</span> epoch_loss<span class="token punctuation">,</span> epoch_test_loss
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>模型训练</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>net <span class="token operator">=</span> My_ResNet<span class="token punctuation">(</span>resnet101<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span><span class="token string">&#39;cuda&#39;</span><span class="token punctuation">)</span>

loss_fn <span class="token operator">=</span> nn<span class="token punctuation">.</span>MSELoss<span class="token punctuation">(</span><span class="token punctuation">)</span>
opt <span class="token operator">=</span> torch<span class="token punctuation">.</span>optim<span class="token punctuation">.</span>Adam<span class="token punctuation">(</span>net<span class="token punctuation">.</span>parameters<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> lr<span class="token operator">=</span><span class="token number">0.0001</span><span class="token punctuation">)</span>
exp_lr_scheduler <span class="token operator">=</span> lr_scheduler<span class="token punctuation">.</span>StepLR<span class="token punctuation">(</span>opt<span class="token punctuation">,</span> step_size<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> gamma<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span>
epochs <span class="token operator">=</span> <span class="token number">5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>train_loss <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
test_loss <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token keyword">for</span> epoch <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>epochs<span class="token punctuation">)</span><span class="token punctuation">:</span>
    epoch_loss<span class="token punctuation">,</span> epoch_test_loss <span class="token operator">=</span> fit<span class="token punctuation">(</span>epoch<span class="token punctuation">,</span> net<span class="token punctuation">,</span> train_dl<span class="token punctuation">,</span> test_dl<span class="token punctuation">,</span> loss_fn<span class="token punctuation">,</span> opt<span class="token punctuation">,</span> exp_lr_scheduler<span class="token punctuation">)</span>
    train_loss<span class="token punctuation">.</span>append<span class="token punctuation">(</span>epoch_loss<span class="token punctuation">)</span>
    test_loss<span class="token punctuation">.</span>append<span class="token punctuation">(</span>epoch_test_loss<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>train_loss<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> train_loss<span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;Training loss&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>train_loss<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> test_loss<span class="token punctuation">,</span> <span class="token string">&#39;bo&#39;</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;Validation loss&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Training and Validation Loss&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;Epoch&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;Loss Value&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>模型效果可视化</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
imgs<span class="token punctuation">,</span> _<span class="token punctuation">,</span> _<span class="token punctuation">,</span> _<span class="token punctuation">,</span> _ <span class="token operator">=</span> <span class="token builtin">next</span><span class="token punctuation">(</span><span class="token builtin">iter</span><span class="token punctuation">(</span>test_dl<span class="token punctuation">)</span><span class="token punctuation">)</span>
imgs <span class="token operator">=</span> imgs<span class="token punctuation">.</span>to<span class="token punctuation">(</span><span class="token string">&#39;cuda&#39;</span><span class="token punctuation">)</span>
out1<span class="token punctuation">,</span> out2<span class="token punctuation">,</span> out3<span class="token punctuation">,</span> out4 <span class="token operator">=</span> net<span class="token punctuation">(</span>imgs<span class="token punctuation">)</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>imgs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>permute<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    xmin<span class="token punctuation">,</span> ymin<span class="token punctuation">,</span> xmax<span class="token punctuation">,</span> ymax <span class="token operator">=</span> <span class="token punctuation">(</span>out1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">224</span><span class="token punctuation">,</span>
                              out2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">224</span><span class="token punctuation">,</span>
                              out3<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">224</span><span class="token punctuation">,</span>
                              out4<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">224</span><span class="token punctuation">)</span>
    rect <span class="token operator">=</span> Rectangle<span class="token punctuation">(</span><span class="token punctuation">(</span>xmin<span class="token punctuation">,</span> ymin<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>xmax<span class="token operator">-</span>xmin<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ymax<span class="token operator">-</span>ymin<span class="token punctuation">)</span><span class="token punctuation">,</span> fill<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">)</span>
    ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>gca<span class="token punctuation">(</span><span class="token punctuation">)</span>
    ax<span class="token punctuation">.</span>axes<span class="token punctuation">.</span>add_patch<span class="token punctuation">(</span>rect<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230813133342209.png" alt="image-20230813132958720" tabindex="0" loading="lazy"><figcaption>image-20230813132958720</figcaption></figure>`,56),e=[o];function c(l,u){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","简单图像定位.html.vue"]]);export{r as default};
