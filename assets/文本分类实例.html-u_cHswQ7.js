import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,f as t}from"./app-OTaO6_y0.js";const p={},e=t(`<h1 id="文本分类实例" tabindex="-1"><a class="header-anchor" href="#文本分类实例" aria-hidden="true">#</a> 文本分类实例</h1><h2 id="英文文本分类实例" tabindex="-1"><a class="header-anchor" href="#英文文本分类实例" aria-hidden="true">#</a> 英文文本分类实例</h2><h3 id="数据预处理" tabindex="-1"><a class="header-anchor" href="#数据预处理" aria-hidden="true">#</a> 数据预处理</h3><h4 id="读取并观察数据" tabindex="-1"><a class="header-anchor" href="#读取并观察数据" aria-hidden="true">#</a> 读取并观察数据</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;Tweets.csv&#39;</span><span class="token punctuation">)</span>			<span class="token comment"># 读取csv文件</span>
data <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;airline_sentiment&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;text&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>	<span class="token comment"># 取出标签和评论两列</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>data<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230828155405675.png" alt="image-20230828155109787" tabindex="0" loading="lazy"><figcaption>image-20230828155109787</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>data<span class="token punctuation">.</span>airline_sentiment<span class="token punctuation">.</span>unique<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 查看标签类型</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230828160006339.png" alt="image-20230828155335422" tabindex="0" loading="lazy"><figcaption>image-20230828155335422</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>data<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 查看数据详细信息</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230828160112814.png" alt="image-20230828155346312" tabindex="0" loading="lazy"><figcaption>image-20230828155346312</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>data<span class="token punctuation">.</span>airline_sentiment<span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 查看每种评论各有几条</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230813202648937.png" alt="image-20230828155405675" tabindex="0" loading="lazy"><figcaption>image-20230828155405675</figcaption></figure><h4 id="创建标签列表" tabindex="-1"><a class="header-anchor" href="#创建标签列表" aria-hidden="true">#</a> 创建标签列表</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>label <span class="token operator">=</span> pd<span class="token punctuation">.</span>factorize<span class="token punctuation">(</span>data<span class="token punctuation">.</span>airline_sentiment<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="去重复去特殊字符小写" tabindex="-1"><a class="header-anchor" href="#去重复去特殊字符小写" aria-hidden="true">#</a> 去重复去特殊字符小写</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>data<span class="token punctuation">.</span>duplicated<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 查询重复值</span>
<span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token number">188</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>data<span class="token punctuation">.</span>drop_duplicates<span class="token punctuation">(</span>inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token comment"># 去重</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>data<span class="token punctuation">.</span>duplicated<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="文本处理函数" tabindex="-1"><a class="header-anchor" href="#文本处理函数" aria-hidden="true">#</a> 文本处理函数</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">pre_text</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span>
    pat <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">&#39;[A-Za-z]+&#39;</span><span class="token punctuation">)</span>
    text <span class="token operator">=</span> pat<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>text<span class="token punctuation">)</span>
    text <span class="token operator">=</span> <span class="token punctuation">[</span>w<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">for</span> w <span class="token keyword">in</span> text<span class="token punctuation">]</span>
    <span class="token keyword">return</span> text
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>text <span class="token operator">=</span> data<span class="token punctuation">.</span>text<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>pre_text<span class="token punctuation">)</span> <span class="token comment"># 去特殊字符，小写</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="创建词表" tabindex="-1"><a class="header-anchor" href="#创建词表" aria-hidden="true">#</a> 创建词表</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>word_set <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> sentence <span class="token keyword">in</span> text<span class="token punctuation">:</span>
    <span class="token keyword">for</span> word <span class="token keyword">in</span> sentence<span class="token punctuation">:</span>
        word_set<span class="token punctuation">.</span>add<span class="token punctuation">(</span>word<span class="token punctuation">)</span>
        
vocab_size <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>word_set<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token comment"># 声明词表大小，用于后面词嵌入</span>
word_index <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">(</span>word_set<span class="token punctuation">)</span><span class="token punctuation">.</span>index<span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">for</span> w <span class="token keyword">in</span> word_list<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>word_index
<span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span><span class="token string">&#39;veers&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;nght&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&#39;chicagosmayor&#39;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&#39;hospitals&#39;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span> ···<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="文本数值化" tabindex="-1"><a class="header-anchor" href="#文本数值化" aria-hidden="true">#</a> 文本数值化</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>text <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> t<span class="token punctuation">:</span> <span class="token punctuation">[</span>word_index<span class="token punctuation">.</span>get<span class="token punctuation">(</span>w<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">for</span> w <span class="token keyword">in</span> t<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>text
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230831085529241.png" alt="image-20230828160006339" tabindex="0" loading="lazy"><figcaption>image-20230828160006339</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>max_len <span class="token operator">=</span> <span class="token builtin">max</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token keyword">for</span> t <span class="token keyword">in</span> text<span class="token punctuation">)</span>
pad_text <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>t <span class="token operator">+</span> <span class="token punctuation">(</span>max_len<span class="token operator">-</span><span class="token builtin">len</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">for</span> t <span class="token keyword">in</span> text<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 填充文本至相同长度</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>pad_text
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230828170944286.png" alt="image-20230828160112814" tabindex="0" loading="lazy"><figcaption>image-20230828160112814</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>pad_text<span class="token punctuation">.</span>shape<span class="token punctuation">,</span> label<span class="token punctuation">.</span>shape
<span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">14452</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">14452</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="划分训练集和验证集" tabindex="-1"><a class="header-anchor" href="#划分训练集和验证集" aria-hidden="true">#</a> 划分训练集和验证集</h4><ul><li>使用<code>sklearn.model_selection</code>中的<code>train_test_split</code>来切分数据集</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>x_train<span class="token punctuation">,</span> x_test<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> y_test <span class="token operator">=</span> train_test_split<span class="token punctuation">(</span>pad_text<span class="token punctuation">,</span> label<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>x_train<span class="token punctuation">.</span>shape<span class="token punctuation">,</span> x_test<span class="token punctuation">.</span>shape<span class="token punctuation">,</span> y_train<span class="token punctuation">.</span>shape<span class="token punctuation">,</span> y_test<span class="token punctuation">.</span>shape
<span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">10839</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3613</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">10839</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3613</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Twitter_dataset</span><span class="token punctuation">(</span>Dataset<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> text_arr<span class="token punctuation">,</span> label_arr<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>text_arr <span class="token operator">=</span> text_arr
        self<span class="token punctuation">.</span>label_arr <span class="token operator">=</span> label_arr

    <span class="token keyword">def</span> <span class="token function">__getitem__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">:</span>
        text <span class="token operator">=</span> torch<span class="token punctuation">.</span>LongTensor<span class="token punctuation">(</span>self<span class="token punctuation">.</span>text_arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>
        label <span class="token operator">=</span> self<span class="token punctuation">.</span>label_arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
        <span class="token keyword">return</span> text<span class="token punctuation">,</span> label
    
    <span class="token keyword">def</span> <span class="token function">__len__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>text_arr<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>train_ds <span class="token operator">=</span> Twitter_dataset<span class="token punctuation">(</span>x_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span>
test_ds <span class="token operator">=</span> Twitter_dataset<span class="token punctuation">(</span>x_test<span class="token punctuation">,</span> y_test<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>BATCH_SIZE <span class="token operator">=</span> <span class="token number">32</span>
train_dl <span class="token operator">=</span> DataLoader<span class="token punctuation">(</span>train_ds<span class="token punctuation">,</span> batch_size<span class="token operator">=</span>BATCH_SIZE<span class="token punctuation">,</span> shuffle<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
test_dl <span class="token operator">=</span> DataLoader<span class="token punctuation">(</span>test_ds<span class="token punctuation">,</span> batch_size<span class="token operator">=</span>BATCH_SIZE<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建模型" tabindex="-1"><a class="header-anchor" href="#创建模型" aria-hidden="true">#</a> 创建模型</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>embedding_dim <span class="token operator">=</span> <span class="token number">100</span>
hidden_size <span class="token operator">=</span> <span class="token number">200</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>vocab_size<span class="token punctuation">,</span> max_len
<span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token number">13662</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>基本文本分类模型</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Basic_Net</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>vocab_size<span class="token punctuation">,</span> embedding_dim<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span>Basic_Net<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>em <span class="token operator">=</span> nn<span class="token punctuation">.</span>Embedding<span class="token punctuation">(</span>vocab_size<span class="token punctuation">,</span> embedding_dim<span class="token punctuation">)</span>  <span class="token comment"># batch * max_len * 100</span>
        self<span class="token punctuation">.</span>fc1 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>max_len <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">1024</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>fc2 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>
        x <span class="token operator">=</span> self<span class="token punctuation">.</span>em<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
        x <span class="token operator">=</span> x<span class="token punctuation">.</span>view<span class="token punctuation">(</span>x<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
        x <span class="token operator">=</span> F<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>self<span class="token punctuation">.</span>fc1<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
        x <span class="token operator">=</span> self<span class="token punctuation">.</span>fc2<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
        <span class="token keyword">return</span> x
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>LSTM模型</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">LSTM_Net</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>vocab_size<span class="token punctuation">,</span> embedding_dim<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span>LSTM_Net<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>em <span class="token operator">=</span> nn<span class="token punctuation">.</span>Embedding<span class="token punctuation">(</span>vocab_size<span class="token punctuation">,</span> embedding_dim<span class="token punctuation">)</span>  <span class="token comment"># batch * max_len * 100</span>
        self<span class="token punctuation">.</span>lstm <span class="token operator">=</span> nn<span class="token punctuation">.</span>LSTM<span class="token punctuation">(</span>embedding_dim<span class="token punctuation">,</span> hidden_size<span class="token punctuation">,</span> batch_first<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>fc1 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>hidden_size<span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>fc2 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>
        x <span class="token operator">=</span> self<span class="token punctuation">.</span>em<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
        x<span class="token punctuation">,</span> _ <span class="token operator">=</span> self<span class="token punctuation">.</span>lstm<span class="token punctuation">(</span>x<span class="token punctuation">)</span>                 <span class="token comment"># x -&gt; batch, time_step, output</span>
        x <span class="token operator">=</span> F<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>self<span class="token punctuation">.</span>fc1<span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># 取出最后一个时间步的输出</span>
        x <span class="token operator">=</span> self<span class="token punctuation">.</span>fc2<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
        <span class="token keyword">return</span> x
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>GRU模型</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">GRU_Net</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>vocab_size<span class="token punctuation">,</span> embedding_dim<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span>GRU_Net<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>em <span class="token operator">=</span> nn<span class="token punctuation">.</span>Embedding<span class="token punctuation">(</span>vocab_size<span class="token punctuation">,</span> embedding_dim<span class="token punctuation">)</span>  <span class="token comment"># batch * max_len * 100</span>
        self<span class="token punctuation">.</span>gru <span class="token operator">=</span> nn<span class="token punctuation">.</span>GRU<span class="token punctuation">(</span>embedding_dim<span class="token punctuation">,</span> hidden_size<span class="token punctuation">,</span> batch_first<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>fc1 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>hidden_size<span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>fc2 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>
        x <span class="token operator">=</span> self<span class="token punctuation">.</span>em<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
        x<span class="token punctuation">,</span> _ <span class="token operator">=</span> self<span class="token punctuation">.</span>gru<span class="token punctuation">(</span>x<span class="token punctuation">)</span>                 <span class="token comment"># x -&gt; batch, time_step, output</span>
        x <span class="token operator">=</span> F<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>self<span class="token punctuation">.</span>fc1<span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># 取出最后一个时间步的输出</span>
        x <span class="token operator">=</span> self<span class="token punctuation">.</span>fc2<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
        <span class="token keyword">return</span> x
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="训练模型" tabindex="-1"><a class="header-anchor" href="#训练模型" aria-hidden="true">#</a> 训练模型</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>device <span class="token operator">=</span> torch<span class="token punctuation">.</span>device<span class="token punctuation">(</span><span class="token string">&#39;cuda&#39;</span> <span class="token keyword">if</span> torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token string">&#39;cpu&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>分别创建三个模型</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>basic_model <span class="token operator">=</span> Basic_Net<span class="token punctuation">(</span>vocab_size<span class="token punctuation">,</span> embedding_dim<span class="token punctuation">)</span>
LSTM_model <span class="token operator">=</span> LSTM_Net<span class="token punctuation">(</span>vocab_size<span class="token punctuation">,</span> embedding_dim<span class="token punctuation">)</span>
GRU_model <span class="token operator">=</span> GRU_Net<span class="token punctuation">(</span>vocab_size<span class="token punctuation">,</span> embedding_dim<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>分别创建三个模型对应的优化器</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>loss_fn <span class="token operator">=</span> nn<span class="token punctuation">.</span>CrossEntropyLoss<span class="token punctuation">(</span><span class="token punctuation">)</span>
basic_opt <span class="token operator">=</span> torch<span class="token punctuation">.</span>optim<span class="token punctuation">.</span>Adam<span class="token punctuation">(</span>basic_model<span class="token punctuation">.</span>parameters<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> lr<span class="token operator">=</span><span class="token number">0.0001</span><span class="token punctuation">)</span>
LSTM_opt <span class="token operator">=</span> torch<span class="token punctuation">.</span>optim<span class="token punctuation">.</span>Adam<span class="token punctuation">(</span>LSTM_model<span class="token punctuation">.</span>parameters<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> lr<span class="token operator">=</span><span class="token number">0.0001</span><span class="token punctuation">)</span>
GRU_opt <span class="token operator">=</span> torch<span class="token punctuation">.</span>optim<span class="token punctuation">.</span>Adam<span class="token punctuation">(</span>GRU_model<span class="token punctuation">.</span>parameters<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> lr<span class="token operator">=</span><span class="token number">0.0001</span><span class="token punctuation">)</span>
basic_exp_lr_scheduler <span class="token operator">=</span> lr_scheduler<span class="token punctuation">.</span>StepLR<span class="token punctuation">(</span>basic_opt<span class="token punctuation">,</span> step_size<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> gamma<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span>
LSTM_exp_lr_scheduler <span class="token operator">=</span> lr_scheduler<span class="token punctuation">.</span>StepLR<span class="token punctuation">(</span>LSTM_opt<span class="token punctuation">,</span> step_size<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> gamma<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span>
GRU_exp_lr_scheduler <span class="token operator">=</span> lr_scheduler<span class="token punctuation">.</span>StepLR<span class="token punctuation">(</span>GRU_opt<span class="token punctuation">,</span> step_size<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> gamma<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span>
epochs <span class="token operator">=</span> <span class="token number">30</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>分别训练三个模型</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>basic_train_loss<span class="token punctuation">,</span> basic_train_acc<span class="token punctuation">,</span> basic_test_loss<span class="token punctuation">,</span> basic_test_acc<span class="token punctuation">,</span> basic_best_model_wts <span class="token operator">=</span> common<span class="token punctuation">.</span>ModelTrainer<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fit<span class="token punctuation">(</span>epochs<span class="token punctuation">,</span> train_dl<span class="token punctuation">,</span> test_dl<span class="token punctuation">,</span>basic_model<span class="token punctuation">,</span> loss_fn<span class="token punctuation">,</span> basic_opt<span class="token punctuation">,</span>basic_exp_lr_scheduler<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>LSTM_train_loss<span class="token punctuation">,</span> LSTM_train_acc<span class="token punctuation">,</span> LSTM_test_loss<span class="token punctuation">,</span> LSTM_test_acc<span class="token punctuation">,</span> LSTM_best_model_wts <span class="token operator">=</span> common<span class="token punctuation">.</span>ModelTrainer<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fit<span class="token punctuation">(</span>epochs<span class="token punctuation">,</span>train_dl<span class="token punctuation">,</span> test_dl<span class="token punctuation">,</span>LSTM_model<span class="token punctuation">,</span> loss_fn<span class="token punctuation">,</span> LSTM_opt<span class="token punctuation">,</span>LSTM_exp_lr_scheduler<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>GRU_train_loss<span class="token punctuation">,</span> GRU_train_acc<span class="token punctuation">,</span> GRU_test_loss<span class="token punctuation">,</span> GRU_test_acc<span class="token punctuation">,</span> GRU_best_model_wts <span class="token operator">=</span> common<span class="token punctuation">.</span>ModelTrainer<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fit<span class="token punctuation">(</span>epochs<span class="token punctuation">,</span>train_dl<span class="token punctuation">,</span> test_dl<span class="token punctuation">,</span>GRU_model<span class="token punctuation">,</span> loss_fn<span class="token punctuation">,</span> GRU_opt<span class="token punctuation">,</span>GRU_exp_lr_scheduler<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="模型评价" tabindex="-1"><a class="header-anchor" href="#模型评价" aria-hidden="true">#</a> 模型评价</h3><ul><li>分别对三个模型进行绘图评价</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span>epochs<span class="token punctuation">)</span><span class="token punctuation">,</span> basic_train_loss<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;train_loss&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span>epochs<span class="token punctuation">)</span><span class="token punctuation">,</span> basic_test_loss<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;test_loss&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span>epochs<span class="token punctuation">)</span><span class="token punctuation">,</span> LSTM_train_loss<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;train_loss&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span>epochs<span class="token punctuation">)</span><span class="token punctuation">,</span> LSTM_test_loss<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;test_loss&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span>epochs<span class="token punctuation">)</span><span class="token punctuation">,</span> GRU_train_loss<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;train_loss&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span>epochs<span class="token punctuation">)</span><span class="token punctuation">,</span> GRU_test_loss<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;test_loss&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230831085506191.png" alt="image-20230828170944286" tabindex="0" loading="lazy"><figcaption>image-20230828170944286</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span>epochs<span class="token punctuation">)</span><span class="token punctuation">,</span> basic_train_acc<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;train_acc&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span>epochs<span class="token punctuation">)</span><span class="token punctuation">,</span> basic_test_acc<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;test_acc&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span>epochs<span class="token punctuation">)</span><span class="token punctuation">,</span> LSTM_train_acc<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;train_acc&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span>epochs<span class="token punctuation">)</span><span class="token punctuation">,</span> LSTM_test_acc<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;test_acc&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span>epochs<span class="token punctuation">)</span><span class="token punctuation">,</span> GRU_train_acc<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;train_acc&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span>epochs<span class="token punctuation">)</span><span class="token punctuation">,</span> GRU_test_acc<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;test_acc&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230828170954898.png" alt="image-20230828170954898" tabindex="0" loading="lazy"><figcaption>image-20230828170954898</figcaption></figure><h2 id="中文文本分类实例" tabindex="-1"><a class="header-anchor" href="#中文文本分类实例" aria-hidden="true">#</a> 中文文本分类实例</h2><h3 id="数据预处理-1" tabindex="-1"><a class="header-anchor" href="#数据预处理-1" aria-hidden="true">#</a> 数据预处理</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;waimai_10k.csv&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>数据集信息</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>data<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
data<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span>
data<span class="token punctuation">.</span>label<span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230828131207281.png" alt="image-20230831085506191" loading="lazy"><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230831085629891.png" alt="image-20230831085529241" loading="lazy"><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230831202948530.png" alt="image-20230831085629891" loading="lazy"></p><ul><li>预处理函数</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">pre_text</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># 中文标点符号</span>
    <span class="token keyword">for</span> char <span class="token keyword">in</span> <span class="token string">&quot;，。！？；：“”‘’【】（）&quot;</span><span class="token punctuation">:</span>
        text <span class="token operator">=</span> text<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>char<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    <span class="token comment"># 英文标点符号</span>
    <span class="token keyword">for</span> char <span class="token keyword">in</span> string<span class="token punctuation">.</span>punctuation<span class="token punctuation">:</span>
        text <span class="token operator">=</span> text<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>char<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    <span class="token comment"># 去空格</span>
    text <span class="token operator">=</span> text<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    <span class="token comment"># 分词</span>
    segmented_text <span class="token operator">=</span> jieba<span class="token punctuation">.</span>lcut<span class="token punctuation">(</span>text<span class="token punctuation">)</span>
    <span class="token comment"># 去空</span>
    filtered_segmented_text <span class="token operator">=</span> <span class="token punctuation">[</span>word <span class="token keyword">for</span> word <span class="token keyword">in</span> segmented_text <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token keyword">return</span> filtered_segmented_text
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>apply预处理函数</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>data<span class="token punctuation">[</span><span class="token string">&#39;review&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">&#39;review&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>pre_text<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>按照词语出现次数从多到少排序</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>word_count <span class="token operator">=</span> pd<span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span>np<span class="token punctuation">.</span>concatenate<span class="token punctuation">(</span>data<span class="token punctuation">.</span>review<span class="token punctuation">.</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>过滤掉出现次数少于2的词语</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>word_count <span class="token operator">=</span> word_count<span class="token punctuation">[</span>word_count<span class="token operator">&gt;</span><span class="token number">2</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>取出经过排序和过滤的词语列表</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>word_list <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>word_count<span class="token punctuation">.</span>index<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>给词语列表增加索引值</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>word_index <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">(</span>word<span class="token punctuation">,</span> word_list<span class="token punctuation">.</span>index<span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">for</span> word <span class="token keyword">in</span> word_list<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>利用带索引的词语列表将评论文本数值化</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>text <span class="token operator">=</span> data<span class="token punctuation">.</span>review<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token punctuation">[</span>word_index<span class="token punctuation">.</span>get<span class="token punctuation">(</span>word<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">for</span> word <span class="token keyword">in</span> x<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>设置评论长度为20，不足填充，超过截断</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>text_len <span class="token operator">=</span> <span class="token number">20</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>pad_text <span class="token operator">=</span> <span class="token punctuation">[</span>l <span class="token operator">+</span> <span class="token punctuation">(</span>text_len <span class="token operator">-</span> <span class="token builtin">len</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> text_len <span class="token keyword">else</span> l<span class="token punctuation">[</span><span class="token punctuation">:</span>text_len<span class="token punctuation">]</span> <span class="token keyword">for</span> l <span class="token keyword">in</span> text<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>将截取后的评论转化为ndarray</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>pad_text <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>pad_text<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token punctuation">(</span><span class="token number">11987</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>取出标签</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>labels <span class="token operator">=</span> data<span class="token punctuation">.</span>label<span class="token punctuation">.</span>values
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token punctuation">(</span><span class="token number">11987</span><span class="token punctuation">,</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="模型创建与训练" tabindex="-1"><a class="header-anchor" href="#模型创建与训练" aria-hidden="true">#</a> 模型创建与训练</h3><ul><li>与上面一样</li></ul><h2 id="rnn的优化方法" tabindex="-1"><a class="header-anchor" href="#rnn的优化方法" aria-hidden="true">#</a> RNN的优化方法</h2><ul><li>增加网络容量 <ul><li>增加每层单元数或增加层数</li><li>循环层堆叠</li><li>在<code>nn.LSTM()</code>中增加<code>num_layers=</code>属性，确定循环层数</li></ul></li></ul><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230901164337807.png" alt="image-20230831202948530" tabindex="0" loading="lazy"><figcaption>image-20230831202948530</figcaption></figure><ul><li>使用循环<code>dropout</code>来降低过拟合 <ul><li>对每个时间步应该使用相同的<code>dropout</code>掩码，（<code>dropout mask</code>，相同模式的舍弃单元），而不是让<code>dropout</code>掩码随着时间步的增加而随机变化</li><li>pytorch没有内置循环<code>dropout</code></li></ul></li><li>使用双向RNN <ul><li>双向RNN是一种常见的RNN变体，它在某些任务上的性能比普通RNN更好</li><li>它常用于自然语言处理</li><li>双向RNN利用了RNN的顺序敏感性：它包含两个普通RNN，这两个RNN分别沿一个方向对输入序列进行处理（时间正序和时间逆序），然后将它们的表示合并在一起。</li><li>通过这两个方向处理序列，双向RNN能够捕捉到可能被单向RNN忽略的模式</li></ul></li></ul><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230901080225600.png" alt="image-20230831205435047" tabindex="0" loading="lazy"><figcaption>image-20230831205435047</figcaption></figure>`,101),o=[e];function c(l,i){return s(),a("div",null,o)}const d=n(p,[["render",c],["__file","文本分类实例.html.vue"]]);export{d as default};
