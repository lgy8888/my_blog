import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as i,c as l,f as e}from"./app-OTaO6_y0.js";const r={},h=e('<h1 id="数组和广义表" tabindex="-1"><a class="header-anchor" href="#数组和广义表" aria-hidden="true">#</a> 数组和广义表</h1><h2 id="数组" tabindex="-1"><a class="header-anchor" href="#数组" aria-hidden="true">#</a> 数组</h2><h3 id="定义" tabindex="-1"><a class="header-anchor" href="#定义" aria-hidden="true">#</a> 定义</h3><ul><li>数组可以看成一种特殊的线性表，即线性表中的数据元素本身也是一个线性表</li><li>一维数组可以看成一个线性表</li><li>二维数组可以看成数据元素是一维数组的一维数组</li></ul><h3 id="存储结构" tabindex="-1"><a class="header-anchor" href="#存储结构" aria-hidden="true">#</a> 存储结构</h3><ul><li>对数组一般不做插入、删除操作</li><li>一旦建立数组，数据元素的个数和元素之间的关系就不再发生变动</li><li>由于存储单元是一维的结构，所以采用一组连续存储单元存放数组元素就有个次序约定问题 <ul><li>以行为主序：一行存储完了接着存储下一行</li><li>以列为主序：一列存储完了接着存储下一列</li></ul></li><li>数组的顺序存储是一种随机存取的结构</li></ul><h3 id="矩阵" tabindex="-1"><a class="header-anchor" href="#矩阵" aria-hidden="true">#</a> 矩阵</h3><ul><li>矩阵是一个二维数组</li><li><strong>压缩存储</strong>，是指为多个值相同的数组元素只分配一个存储空间，值为零的数组元素不分配空间。</li><li>对称矩阵关于主对角线对称，因此只需存储上三角或下三角部分即可。</li><li>对特殊矩阵的压缩存储方法： <ul><li>首先，确定压缩存储矩阵所需的空间的大小。</li><li>其次，确定矩阵元素aij 在压缩存储区域中的位置。</li></ul></li><li><strong>稀疏矩阵</strong><ul><li>设 $m × n$ 矩阵中有t个非零元素且 $t&lt;&lt; m × n$</li><li>$δ = t/ m × n$</li><li>$δ$ 称为稀疏因子, $δ≤0.05$ 时为稀疏矩阵。</li></ul></li></ul><h2 id="广义表" tabindex="-1"><a class="header-anchor" href="#广义表" aria-hidden="true">#</a> 广义表</h2><h3 id="定义-1" tabindex="-1"><a class="header-anchor" href="#定义-1" aria-hidden="true">#</a> 定义</h3><ul><li>广义表是线性表的推广。线性表中的元素仅限于原子项，即不可以再分，而广义表中的元素既可以是原子项，也可以是子表(另一个线性表)。</li></ul><h3 id="求表头" tabindex="-1"><a class="header-anchor" href="#求表头" aria-hidden="true">#</a> 求表头</h3><ul><li>若广义表$LS=(a_1，a_2，…，a_n)$， 则$head(LS)=a——1$。</li><li>取表头运算得到的结果可以是原子，也可以是一个子表。</li></ul><h3 id="求表尾" tabindex="-1"><a class="header-anchor" href="#求表尾" aria-hidden="true">#</a> 求表尾</h3><ul><li>若广义表$LS=(a_1，a_2，…，a_n)$，则$tail(LS)=(a_2，a_3，…，a_n)$</li><li>取表尾运算得到的结果是除表头以外的所有元素，取表尾运算得到的结果一定是一个子表。</li></ul>',15),d=[h];function n(t,s){return i(),l("div",null,d)}const o=a(r,[["render",n],["__file","数组和广义表.html.vue"]]);export{o as default};
