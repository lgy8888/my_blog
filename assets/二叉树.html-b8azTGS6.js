const e=JSON.parse('{"key":"v-0b11ad92","path":"/coding/programmerCarl/%E4%BA%8C%E5%8F%89%E6%A0%91.html","title":"二叉树","lang":"zh-CN","frontmatter":{"description":"基本原理 二叉树的类型 二叉树主要有两种形式：满二叉树和完全二叉树 满二叉树 如果一棵二叉树只有度为0的结点和度为2的结点，并且度为0的结点在同一层上，则这棵二叉树为满二叉树。 满二叉树的深度为k，节点为$2^k-1$ 满二叉树 完全二叉树 在完全二叉树中，除了最底层节点可能没填满外，其余每层节点数都达到最大值，并且最下面一层的节点都集中在该层最左边的...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/my_blog/coding/programmerCarl/%E4%BA%8C%E5%8F%89%E6%A0%91.html"}],["meta",{"property":"og:site_name","content":"林光远的个人笔记"}],["meta",{"property":"og:title","content":"二叉树"}],["meta",{"property":"og:description","content":"基本原理 二叉树的类型 二叉树主要有两种形式：满二叉树和完全二叉树 满二叉树 如果一棵二叉树只有度为0的结点和度为2的结点，并且度为0的结点在同一层上，则这棵二叉树为满二叉树。 满二叉树的深度为k，节点为$2^k-1$ 满二叉树 完全二叉树 在完全二叉树中，除了最底层节点可能没填满外，其余每层节点数都达到最大值，并且最下面一层的节点都集中在该层最左边的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LGYNB"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"二叉树\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LGYNB\\",\\"url\\":\\"/\\"}]}"]]},"headers":[{"level":2,"title":"基本原理","slug":"基本原理","link":"#基本原理","children":[{"level":3,"title":"二叉树的类型","slug":"二叉树的类型","link":"#二叉树的类型","children":[]},{"level":3,"title":"二叉树的存储方式","slug":"二叉树的存储方式","link":"#二叉树的存储方式","children":[]},{"level":3,"title":"二叉树的遍历方式","slug":"二叉树的遍历方式","link":"#二叉树的遍历方式","children":[]},{"level":3,"title":"二叉树的定义","slug":"二叉树的定义","link":"#二叉树的定义","children":[]}]},{"level":2,"title":"二叉树深度优先搜索遍历","slug":"二叉树深度优先搜索遍历","link":"#二叉树深度优先搜索遍历","children":[{"level":3,"title":"递归","slug":"递归","link":"#递归","children":[]},{"level":3,"title":"迭代","slug":"迭代","link":"#迭代","children":[]}]},{"level":2,"title":"二叉树广度优先搜索遍历","slug":"二叉树广度优先搜索遍历","link":"#二叉树广度优先搜索遍历","children":[{"level":3,"title":"暴力解法","slug":"暴力解法","link":"#暴力解法","children":[]},{"level":3,"title":"队列实现","slug":"队列实现","link":"#队列实现","children":[]}]},{"level":2,"title":"翻转二叉树","slug":"翻转二叉树","link":"#翻转二叉树","children":[{"level":3,"title":"基本思路","slug":"基本思路-6","link":"#基本思路-6","children":[]},{"level":3,"title":"代码实现","slug":"代码实现-6","link":"#代码实现-6","children":[]}]},{"level":2,"title":"对称二叉树","slug":"对称二叉树","link":"#对称二叉树","children":[{"level":3,"title":"左右遍历比较法","slug":"左右遍历比较法","link":"#左右遍历比较法","children":[]},{"level":3,"title":"内外侧比较法","slug":"内外侧比较法","link":"#内外侧比较法","children":[]}]},{"level":2,"title":"二叉树的最大深度","slug":"二叉树的最大深度","link":"#二叉树的最大深度","children":[{"level":3,"title":"递归法","slug":"递归法","link":"#递归法","children":[]}]}],"git":{},"readingTime":{"minutes":12.74,"words":3823},"filePathRelative":"coding/programmerCarl/二叉树.md","autoDesc":true}');export{e as data};
