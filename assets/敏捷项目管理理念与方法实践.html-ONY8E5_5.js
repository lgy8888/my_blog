import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as i,c as e,f as l}from"./app-OTaO6_y0.js";const r={},h=l('<h1 id="敏捷项目管理理念与方法实践" tabindex="-1"><a class="header-anchor" href="#敏捷项目管理理念与方法实践" aria-hidden="true">#</a> 敏捷项目管理理念与方法实践</h1><h2 id="敏捷更符合软件开发规律" tabindex="-1"><a class="header-anchor" href="#敏捷更符合软件开发规律" aria-hidden="true">#</a> 敏捷更符合软件开发规律</h2><ul><li>软件开发是自底向上逐步有序的生长过程，类似于植物生长</li><li>敏捷开发遵循软件客观规律，不断的进行迭代增量开发，最终交付符合客户价值的产品</li><li>先做出产品的雏形，根据客户和市场的反馈逐步完善</li><li>敏捷方法基于经验主义，是不断进行迭代增量开发的过程</li></ul><h2 id="传统开发模型-瀑布模型" tabindex="-1"><a class="header-anchor" href="#传统开发模型-瀑布模型" aria-hidden="true">#</a> 传统开发模型：瀑布模型</h2><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230919202905043.png" alt="image-20230919202905043" tabindex="0" loading="lazy"><figcaption>image-20230919202905043</figcaption></figure><h2 id="敏捷开发与瀑布开发的区别" tabindex="-1"><a class="header-anchor" href="#敏捷开发与瀑布开发的区别" aria-hidden="true">#</a> 敏捷开发与瀑布开发的区别</h2><h3 id="外在区别" tabindex="-1"><a class="header-anchor" href="#外在区别" aria-hidden="true">#</a> 外在区别</h3><ul><li>瀑布开发是昨晚所有的需求分析之后进行设计，开发，测试，然后一次性交付</li><li>敏捷开发是分迭代进行，将需求拆分成小颗粒，每个迭代只交付一个</li></ul><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230919202932960.png" alt="image-20230919202932960" tabindex="0" loading="lazy"><figcaption>image-20230919202932960</figcaption></figure><h3 id="内在区别" tabindex="-1"><a class="header-anchor" href="#内在区别" aria-hidden="true">#</a> 内在区别</h3><ul><li>瀑布开发是固定范围，弹性时间，意思是时间和资源可变，需求不可变，要完全按照最初的计划来执行 <ul><li>在瀑布开发当中是以计划为驱动的</li></ul></li><li>敏捷方法是固定资源和时间，通过调整功能来达到在这些约束条件之下产生更高优先级和更高质量的产品 <ul><li>敏捷开发当中是以价值为驱动的</li></ul></li></ul><h2 id="敏捷宣言" tabindex="-1"><a class="header-anchor" href="#敏捷宣言" aria-hidden="true">#</a> 敏捷宣言</h2><p>个体和活动 高于 流程和工具</p><p>工作的软件 高于 详尽的文档</p><p>客户合作 高于 合同谈判</p><p>响应变化 高于 遵循计划</p><h3 id="scrum" tabindex="-1"><a class="header-anchor" href="#scrum" aria-hidden="true">#</a> Scrum</h3><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230919203950265.png" alt="image-20230919203950265" tabindex="0" loading="lazy"><figcaption>image-20230919203950265</figcaption></figure><ol><li>首先将需求形成一个产品待办列表</li><li>在迭代的计划会议当中从产品待办列表选取适当的需求条目，进入到Sprint待办列表</li><li>接下来进入到2-4周的迭代开发过程</li><li>每日进行Scrum站会，站会上团队成员共享进度资源和风险</li><li>迭代完成之后，提交一个潜在可交付的产品增量给客户进行评审</li></ol><h2 id="看板方法" tabindex="-1"><a class="header-anchor" href="#看板方法" aria-hidden="true">#</a> 看板方法</h2><p>看板使项目管理最大的可视化，但是看板更可以将研发的过程进行管理，记录下用户故事研发过程中的细节和历程</p><p>看板的核心机制是限制在制品的数量和拉动疏通，通过它来暴露系统运作流程中的问题，并激发协作以改进系统</p><h2 id="敏捷技术和工程实践" tabindex="-1"><a class="header-anchor" href="#敏捷技术和工程实践" aria-hidden="true">#</a> 敏捷技术和工程实践</h2><p><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230919204536672.png" alt="image-20230919204511595" loading="lazy"><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230919204511595.png" alt="image-20230919204536672" loading="lazy"></p><h2 id="敏捷开发实践举例" tabindex="-1"><a class="header-anchor" href="#敏捷开发实践举例" aria-hidden="true">#</a> 敏捷开发实践举例</h2><h3 id="用户故事地图" tabindex="-1"><a class="header-anchor" href="#用户故事地图" aria-hidden="true">#</a> 用户故事地图</h3><ul><li>用户故事地图是一门在需求拆分过程中保持全景图的技术</li><li>它可以让我们专注于用户和用户体验，产生更好的沟通效果，最终做出更好的产品</li><li>从左到右讲述用户经历的重要步骤</li><li>从上到下将每一个步骤进行了细节的拆分</li></ul><h3 id="影响地图" tabindex="-1"><a class="header-anchor" href="#影响地图" aria-hidden="true">#</a> 影响地图</h3><ul><li>影响地图是高级技术和业务人员协作创建，它可视化了产品范围（需求）及其背后的假设</li><li>通过回答四个问题来形成一幅思维导图 <ul><li>我们为什么要做这个 -&gt; 找准目标Why</li><li>谁会帮我们 -&gt; 找到关键角色Who</li><li>他们怎么帮我们 -&gt; How</li><li>通过什么功能去实现 -&gt; What</li></ul></li></ul><h4 id="atdd流程" tabindex="-1"><a class="header-anchor" href="#atdd流程" aria-hidden="true">#</a> ATDD流程</h4><ul><li>接收/验收测试驱动开发</li></ul><h3 id="实例化需求" tabindex="-1"><a class="header-anchor" href="#实例化需求" aria-hidden="true">#</a> 实例化需求</h3><ul><li>实例化需求说明是一组过程模式，它帮助团队构建正确的软件产品</li></ul>',33),d=[h];function n(t,c){return i(),e("div",null,d)}const s=a(r,[["render",n],["__file","敏捷项目管理理念与方法实践.html.vue"]]);export{s as default};
