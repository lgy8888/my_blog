import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as i,c as e,f as l}from"./app-OTaO6_y0.js";const r={},h=l('<h1 id="栈与队列" tabindex="-1"><a class="header-anchor" href="#栈与队列" aria-hidden="true">#</a> 栈与队列</h1><h2 id="栈" tabindex="-1"><a class="header-anchor" href="#栈" aria-hidden="true">#</a> 栈</h2><ul><li>计算机科学中，<strong>stack</strong>是一种线性的数据结构，只能在其一段添加数据和移除数据。习惯来说，这一端称为栈顶，另一端不能操作数据的称之为栈底。</li><li>限定仅在表尾进行插入或删除操作的线性表</li><li>表尾 -&gt; 栈顶； 表头 -&gt; 栈底</li><li>特点：先进后出，后进先出</li></ul><h3 id="中缀转前缀" tabindex="-1"><a class="header-anchor" href="#中缀转前缀" aria-hidden="true">#</a> 中缀转前缀</h3><ul><li><p>最初的后缀表达式为：$a+b$，a和b代指子表达式，+号代指所有运算符号</p></li><li><p>将每一个子表达式用括号括起来，形成$(a) + (b)$的结构</p></li><li><p>将$(a) + (b)$结构中间的运算符提取出来，放在母表达式前面，形成$+(a) (b)$的结构</p></li><li><p>将子表达式的括号去掉，得到最终的前缀表达式 $+ab$</p></li><li><p>e.g: 中缀表达式：$(a+b)*c+d-(e+g)*h$</p><p>​ 前缀表达式：$-+<em>+abcd</em>+egh$</p></li></ul><h3 id="中缀转后缀" tabindex="-1"><a class="header-anchor" href="#中缀转后缀" aria-hidden="true">#</a> 中缀转后缀</h3><ul><li><p>步骤类似转前缀表达式</p></li><li><p>在第三步中将运算符提取出来后，放在母表达式的后面，形成$(a)(b)+$的结构</p></li><li><p>e.g: 中缀表达式：$(a+b)*c+d-(e+g)*h$</p><p>​ 后缀表达式：$ab+c<em>d+eg+h</em>- $</p></li></ul><h2 id="队列" tabindex="-1"><a class="header-anchor" href="#队列" aria-hidden="true">#</a> 队列</h2><ul><li>队列(queue)是一种特殊的线性表，其插入和删除的操作分别在线性表的两段进行</li><li>向队列中插入元素称为入队(enqueue)，删除元素称为出队(dequeue)</li><li>允许入队的一端叫队尾(rear)，允许出队的一端叫对头(front)，没有元素的队列称为空队列</li><li>队列的特点是<strong>先进先出，后进后出</strong></li></ul><h2 id="递归" tabindex="-1"><a class="header-anchor" href="#递归" aria-hidden="true">#</a> 递归</h2><h3 id="定义" tabindex="-1"><a class="header-anchor" href="#定义" aria-hidden="true">#</a> 定义</h3><ul><li>用自身的更简单情况（所涉及的问题规模更小），来定义自身，称为递归定义</li><li>最简单的情况成为递归出口或递归边界，本身不再使用递归定义</li><li>算法中，直接或简介调用自身的算法成为递归算法</li><li>$n!$的递归定义</li></ul><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230625121321344.png" alt="image-20230625121321344" tabindex="0" loading="lazy"><figcaption>image-20230625121321344</figcaption></figure>',13),d=[h];function n(t,c){return i(),e("div",null,d)}const u=a(r,[["render",n],["__file","栈与队列.html.vue"]]);export{u as default};
