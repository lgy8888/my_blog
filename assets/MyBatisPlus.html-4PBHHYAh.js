import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as s,f as t}from"./app-OTaO6_y0.js";const e={},p=t(`<h1 id="mybatisplus" tabindex="-1"><a class="header-anchor" href="#mybatisplus" aria-hidden="true">#</a> MyBatisPlus</h1><h2 id="springboot整合mybatisplus" tabindex="-1"><a class="header-anchor" href="#springboot整合mybatisplus" aria-hidden="true">#</a> SpringBoot整合MyBatisPlus</h2><ul><li>创建新模块，不勾选MyBatis技术</li><li>手动添加mp起步依赖 <ul><li>由于mp未被收录到idea的系统内置配置，无法直接选择加入</li></ul></li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-plus-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.4.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>设置jdbc参数（application.yml）</p><ul><li>如果使用Druid数据源，需要导入对应坐标</li></ul></li><li><p>制作实体类和表结构（类名与表名对应，属性名与字段名对应）</p></li><li><p>定义数据接口，继承<code>BaseMapper&lt;User&gt;</code></p></li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Mapper</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserDao</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="标准数据层crud开发" tabindex="-1"><a class="header-anchor" href="#标准数据层crud开发" aria-hidden="true">#</a> 标准数据层CRUD开发</h2><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230404144849467.png" alt="image-20230403111123345" tabindex="0" loading="lazy"><figcaption>image-20230403111123345</figcaption></figure><ul><li>lombok <ul><li>一个Java类库，提供了一组注解，简化POJO实体类开发</li></ul></li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.18.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>probided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>常用注解：</li></ul><table><thead><tr><th>名称</th><th>类型</th><th>位置</th><th>作用</th></tr></thead><tbody><tr><td><code>@Data</code></td><td>类注解</td><td>POJO类上方</td><td>为当前实体类在编译期设置对应的getter/setter方法，无参构造方法，toString方法，hashCode和equals方法等</td></tr></tbody></table><h3 id="分页查询" tabindex="-1"><a class="header-anchor" href="#分页查询" aria-hidden="true">#</a> 分页查询</h3><ul><li>设置分页拦截器作为Spring管理的bean</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MpConfig</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">MybatisPlusInterceptor</span> <span class="token function">mybatisPlusInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">MybatisPlusInterceptor</span> mybatisPlusInterceptor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MybatisPlusInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mybatisPlusInterceptor<span class="token punctuation">.</span><span class="token function">addInnerInterceptor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PaginationInnerInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> mybatisPlusInterceptor<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>执行分页查询</li></ul><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230302215934868.png" alt="image-20230403170945896" tabindex="0" loading="lazy"><figcaption>image-20230403170945896</figcaption></figure><ul><li>开启日志（用于调试）</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">mybatis-plus</span><span class="token punctuation">:</span>
  <span class="token key atrule">configuration</span><span class="token punctuation">:</span>
    <span class="token key atrule">log-impl</span><span class="token punctuation">:</span> org.apache.ibatis.logging.stdout.StdOutImpl
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="条件查询" tabindex="-1"><a class="header-anchor" href="#条件查询" aria-hidden="true">#</a> 条件查询</h3><ul><li>MyBatisPlus将书写复杂的SQL查询条件进行了封装，使用编程的形式完成查询条件的组合</li></ul><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230404144827105.png" alt="image-20230404143226057" tabindex="0" loading="lazy"><figcaption>image-20230404143226057</figcaption></figure><h4 id="设置查询条件" tabindex="-1"><a class="header-anchor" href="#设置查询条件" aria-hidden="true">#</a> 设置查询条件</h4><ul><li>格式一：常规格式</li></ul><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230403111123345.png" alt="image-20230404144827105" tabindex="0" loading="lazy"><figcaption>image-20230404144827105</figcaption></figure><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230404144926885.png" alt="image-20230404144849467" tabindex="0" loading="lazy"><figcaption>image-20230404144849467</figcaption></figure><ul><li>格式二：Lambda格式（推荐）</li></ul><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230404145024965.png" alt="image-20230404144926885" tabindex="0" loading="lazy"><figcaption>image-20230404144926885</figcaption></figure><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230404145117888.png" alt="image-20230404145024965" tabindex="0" loading="lazy"><figcaption>image-20230404145024965</figcaption></figure><ul><li>并且（and）</li></ul><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230404145241152.png" alt="image-20230404145117888" tabindex="0" loading="lazy"><figcaption>image-20230404145117888</figcaption></figure><ul><li>或者（or）</li></ul><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230405222440215.png" alt="image-20230404145241152" tabindex="0" loading="lazy"><figcaption>image-20230404145241152</figcaption></figure><ul><li><p>范围匹配（&gt;、 =、between）</p><table><thead><tr><th>方法名</th><th>含义</th></tr></thead><tbody><tr><td>lt</td><td>less than</td></tr><tr><td>le</td><td>less and equals</td></tr><tr><td>gt</td><td>greater than</td></tr><tr><td>ge</td><td>greater and equals</td></tr><tr><td>between</td><td>val1:下限，val2:上限</td></tr></tbody></table></li><li><p>模糊匹配（like）</p><table><thead><tr><th>方法名</th><th>含义</th></tr></thead><tbody><tr><td>like</td><td>模糊匹配，两边那都是百分号</td></tr><tr><td>likeLeft</td><td>左边是百分号</td></tr><tr><td>likeRight</td><td>右边是百分号</td></tr></tbody></table></li><li><p>空判定（null）</p></li><li><p>包含性匹配（in）</p></li><li><p>分组（group）</p></li><li><p>排序（order）</p></li></ul><h4 id="null值处理" tabindex="-1"><a class="header-anchor" href="#null值处理" aria-hidden="true">#</a> null值处理</h4><ul><li>条件参数控制</li></ul><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230404143226057.png" alt="image-20230404145840127" tabindex="0" loading="lazy"><figcaption>image-20230404145840127</figcaption></figure><h3 id="字段映射与表名映射" tabindex="-1"><a class="header-anchor" href="#字段映射与表名映射" aria-hidden="true">#</a> 字段映射与表名映射</h3><table><thead><tr><th>名称</th><th>类型</th><th>位置</th><th>作用</th></tr></thead><tbody><tr><td><code>@TableField</code></td><td>属性注解</td><td>POJO类属性定义上方</td><td>设置当前属性对应的数据库表中的字段关系</td></tr><tr><td><code>@TableName</code></td><td>类注解</td><td>POJO类上方</td><td>色湖之当前类对应与数据库表的关系</td></tr></tbody></table><ul><li><code>@TableField</code>属性： <ul><li><code>value</code>（默认）：设置数据库表字段名称</li><li><code>exist</code>：设置属性在数据库表字段中是否存在，默认为true，此属性无法与value合并使用</li><li><code>select</code>：设置属性是否参与查询，此属性与<code>select()</code>映射配置不冲突</li></ul></li></ul><h3 id="dml编程控制" tabindex="-1"><a class="header-anchor" href="#dml编程控制" aria-hidden="true">#</a> DML编程控制</h3><h4 id="id生成策略" tabindex="-1"><a class="header-anchor" href="#id生成策略" aria-hidden="true">#</a> id生成策略</h4><table><thead><tr><th>名称</th><th>类型</th><th>位置</th><th>作用</th></tr></thead><tbody><tr><td><code>@TableId</code></td><td>属性注解</td><td>POJO类中用于表示主键的属性定义上方</td><td>设置当前类中主键属性的生成策略</td></tr></tbody></table><ul><li><p><code>value</code>：设置数据库主键名称</p></li><li><p><code>type</code>：设置主键属性的生成策略，值参照IdType枚举值</p><ul><li><code>AUTO(0)</code>：使用数据库id自增策略控制id生成</li><li><code>NONE(1)</code>：不设置id生成策略</li><li><code>INPUT(2)</code>：用户手工输入id</li><li><code>ASSIGN_ID</code>：雪花算法生成id（可兼容数值型和字符串型）</li><li><code>ASSIGN_UUID</code>：以UUID生成算法作为id生成策略</li></ul></li><li><p>全局配置</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">mybatis-plus</span><span class="token punctuation">:</span>
  <span class="token key atrule">global-config</span><span class="token punctuation">:</span>
    <span class="token key atrule">db-config</span><span class="token punctuation">:</span>
      <span class="token key atrule">id-type</span><span class="token punctuation">:</span> assign_id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="多记录操作" tabindex="-1"><a class="header-anchor" href="#多记录操作" aria-hidden="true">#</a> 多记录操作</h4><ul><li>按照主键删除多条记录</li></ul><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230405222449007.png" alt="image-20230405222440215" tabindex="0" loading="lazy"><figcaption>image-20230405222440215</figcaption></figure><ul><li>根据主键查询多条记录</li></ul><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230405223214246.png" alt="image-20230405222449007" tabindex="0" loading="lazy"><figcaption>image-20230405222449007</figcaption></figure><h4 id="逻辑删除" tabindex="-1"><a class="header-anchor" href="#逻辑删除" aria-hidden="true">#</a> 逻辑删除</h4><ul><li>数据库表中添加逻辑删除标记字段</li></ul><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230404145840127.png" alt="image-20230405223111769" tabindex="0" loading="lazy"><figcaption>image-20230405223111769</figcaption></figure><ul><li>实体类中添加对应字段，并设定当前字段为逻辑删除标记字段或配置逻辑删除字段值</li></ul><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230405223111769.png" alt="image-20230405223214246" tabindex="0" loading="lazy"><figcaption>image-20230405223214246</figcaption></figure><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230405230608441.png" alt="image-20230405223222251" tabindex="0" loading="lazy"><figcaption>image-20230405223222251</figcaption></figure><h4 id="乐观锁" tabindex="-1"><a class="header-anchor" href="#乐观锁" aria-hidden="true">#</a> 乐观锁</h4><ul><li>解决小型并发问题</li><li>数据库表中添加锁标记字段</li></ul><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230406111655508.png" alt="image-20230405230608441" tabindex="0" loading="lazy"><figcaption>image-20230405230608441</figcaption></figure><ul><li>实体类中添加对应字段，并设定当前字段为逻辑删除标记字段</li></ul><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230405230638924.png" alt="image-20230405230638924" tabindex="0" loading="lazy"><figcaption>image-20230405230638924</figcaption></figure><ul><li>配置乐观锁拦截器实现锁机制对应的动态SQL语句拼装</li></ul><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230405223222251.png" alt="image-20230405230715010" tabindex="0" loading="lazy"><figcaption>image-20230405230715010</figcaption></figure><ul><li>使用乐观锁机制在修改前先获取到对应数据的<code>version</code>方可正常进行</li></ul><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230405230715010.png" alt="image-20230405230801816" tabindex="0" loading="lazy"><figcaption>image-20230405230801816</figcaption></figure><h2 id="代码生成器" tabindex="-1"><a class="header-anchor" href="#代码生成器" aria-hidden="true">#</a> 代码生成器</h2><ul><li><p>模板：由MyBatisPlus提供</p></li><li><p>数据库相关配置：读取数据库获取信息</p></li><li><p>开发者自定义配置：手工配置</p></li><li><p>导入坐标</p></li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-plus-generator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.4.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.velocity<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>velocity-engine-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>创建代码生成器对象</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Generator</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 创建生成器</span>
        <span class="token class-name">AutoGenerator</span> autoGenerator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AutoGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>设置数据库配置</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token comment">// 数据源配置</span>
        <span class="token class-name">DataSourceConfig</span> dataSourceConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSourceConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dataSourceConfig<span class="token punctuation">.</span><span class="token function">setDriverName</span><span class="token punctuation">(</span><span class="token string">&quot;com.mysql.cj.jdbc.Driver&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dataSourceConfig<span class="token punctuation">.</span><span class="token function">setUrl</span><span class="token punctuation">(</span><span class="token string">&quot;jdbc:mysql://localhost/db1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dataSourceConfig<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&quot;root&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dataSourceConfig<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">&quot;123456&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        autoGenerator<span class="token punctuation">.</span><span class="token function">setDataSource</span><span class="token punctuation">(</span>dataSourceConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>设置全局配置</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token comment">// 全局配置</span>
        <span class="token class-name">GlobalConfig</span> globalConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GlobalConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        globalConfig<span class="token punctuation">.</span><span class="token function">setOutputDir</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;user.dir&quot;</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;/MyBatisPlus_generator/src/main/java/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        globalConfig<span class="token punctuation">.</span><span class="token function">setOpen</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        globalConfig<span class="token punctuation">.</span><span class="token function">setAuthor</span><span class="token punctuation">(</span><span class="token string">&quot;LGYNB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        globalConfig<span class="token punctuation">.</span><span class="token function">setFileOverride</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        globalConfig<span class="token punctuation">.</span><span class="token function">setMapperName</span><span class="token punctuation">(</span><span class="token string">&quot;%sDao&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        globalConfig<span class="token punctuation">.</span><span class="token function">setIdType</span><span class="token punctuation">(</span><span class="token class-name">IdType</span><span class="token punctuation">.</span><span class="token constant">ASSIGN_ID</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        autoGenerator<span class="token punctuation">.</span><span class="token function">setGlobalConfig</span><span class="token punctuation">(</span>globalConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>设置包配置</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token comment">// 包配置</span>
        <span class="token class-name">PackageConfig</span> packageInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PackageConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        packageInfo<span class="token punctuation">.</span><span class="token function">setParent</span><span class="token punctuation">(</span><span class="token string">&quot;com.lgynb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        packageInfo<span class="token punctuation">.</span><span class="token function">setEntity</span><span class="token punctuation">(</span><span class="token string">&quot;domain&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        packageInfo<span class="token punctuation">.</span><span class="token function">setMapper</span><span class="token punctuation">(</span><span class="token string">&quot;dao&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        autoGenerator<span class="token punctuation">.</span><span class="token function">setPackageInfo</span><span class="token punctuation">(</span>packageInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>设置策略配置</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token comment">// 策略配置</span>
        <span class="token class-name">StrategyConfig</span> strategy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StrategyConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        strategy<span class="token punctuation">.</span><span class="token function">setInclude</span><span class="token punctuation">(</span><span class="token string">&quot;tb_brand&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        strategy<span class="token punctuation">.</span><span class="token function">setTablePrefix</span><span class="token punctuation">(</span><span class="token string">&quot;tb_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        strategy<span class="token punctuation">.</span><span class="token function">setRestControllerStyle</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        strategy<span class="token punctuation">.</span><span class="token function">setEntityLombokModel</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        strategy<span class="token punctuation">.</span><span class="token function">setLogicDeleteFieldName</span><span class="token punctuation">(</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        strategy<span class="token punctuation">.</span><span class="token function">setVersionFieldName</span><span class="token punctuation">(</span><span class="token string">&quot;version&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        autoGenerator<span class="token punctuation">.</span><span class="token function">setStrategy</span><span class="token punctuation">(</span>strategy<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>启动生成器</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token comment">// 运行</span>
        autoGenerator<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>生成结果</li></ul><figure><img src="http://lgy-markdown-img.oss-cn-guangzhou.aliyuncs.com/image/image-20230405230801816.png" alt="image-20230406111655508" tabindex="0" loading="lazy"><figcaption>image-20230406111655508</figcaption></figure>`,81),i=[p];function l(o,c){return a(),s("div",null,i)}const r=n(e,[["render",l],["__file","MyBatisPlus.html.vue"]]);export{r as default};
