import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,f as t}from"./app-OTaO6_y0.js";const p={},e=t(`<h1 id="rnn实例" tabindex="-1"><a class="header-anchor" href="#rnn实例" aria-hidden="true">#</a> RNN实例</h1><h2 id="北京空气污染实例" tabindex="-1"><a class="header-anchor" href="#北京空气污染实例" aria-hidden="true">#</a> 北京空气污染实例</h2><h3 id="数据预处理" tabindex="-1"><a class="header-anchor" href="#数据预处理" aria-hidden="true">#</a> 数据预处理</h3><ul><li><strong>读取csv类型数据</strong></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;PRSA_data_2010.1.1-2014.12.31.csv&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong>处理NAN数据</strong><ul><li>先对第一天所有的NAN值切片去掉</li><li>再利用前向填充处理剩余序列中的NAN值</li><li>这样可以保证序列的完整性</li><li>此方法用于处理连续序列数据中存在NAN值的情况</li></ul></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>data <span class="token operator">=</span> data<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>mathod<span class="token operator">=</span><span class="token string">&#39;ffill&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong>处理时间数据</strong><ul><li>导入<code>datetime</code>库</li><li>将年，月，日，时四行合为一行，作为数据的索引 <code>datetime.datetime(year=?, ···)</code></li><li>去掉多余的行 <code>data.drop(column=[?, ?, ?])</code></li></ul></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> datetime

data<span class="token punctuation">[</span><span class="token string">&#39;time&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">(</span>year<span class="token operator">=</span>x<span class="token punctuation">[</span><span class="token string">&#39;year&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> month<span class="token operator">=</span>x<span class="token punctuation">[</span><span class="token string">&#39;month&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                                                      day<span class="token operator">=</span>x<span class="token punctuation">[</span><span class="token string">&#39;day&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> hour<span class="token operator">=</span>x<span class="token punctuation">[</span><span class="token string">&#39;hour&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
data<span class="token punctuation">.</span>drop<span class="token punctuation">(</span>column<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;No&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;year&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;month&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;day&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hour&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
data<span class="token punctuation">.</span>set_index<span class="token punctuation">(</span><span class="token string">&#39;time&#39;</span><span class="token punctuation">,</span> inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>处理非数值列</strong><ul><li>将非数值列（cbwd）的取值转化为同等数量的列数</li><li>用独热编码的格式来数值化</li></ul></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>data<span class="token punctuation">.</span>cbwd<span class="token punctuation">.</span>unique<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">-</span><span class="token operator">&gt;</span> array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;SE&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cv&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;NW&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;NE&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token builtin">object</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>data <span class="token operator">=</span> data<span class="token punctuation">.</span>join<span class="token punctuation">(</span>pd<span class="token punctuation">.</span>get_dummies<span class="token punctuation">(</span>data<span class="token punctuation">.</span>cbwd<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>drop<span class="token punctuation">(</span>columns<span class="token operator">=</span><span class="token string">&#39;cbwd&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong>划分观测数据和预测数据</strong>（text和label） <ul><li>用前面五天的数据来预测下一天的数据</li><li>将<code>data</code>转化为<code>ndarray</code></li><li>分出x和y</li></ul></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>seq_length <span class="token operator">=</span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token number">24</span>
label <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">*</span> <span class="token number">24</span>

data_ <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">-</span> seq_length <span class="token operator">-</span> label<span class="token punctuation">)</span><span class="token punctuation">:</span>
    data_<span class="token punctuation">.</span>append<span class="token punctuation">(</span>data<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span>i<span class="token punctuation">:</span> i <span class="token operator">+</span> seq_length <span class="token operator">+</span> label<span class="token punctuation">]</span><span class="token punctuation">)</span>
    
data_ <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>df<span class="token punctuation">.</span>values <span class="token keyword">for</span> df <span class="token keyword">in</span> data_<span class="token punctuation">]</span><span class="token punctuation">)</span>

np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span>data_<span class="token punctuation">)</span>
x <span class="token operator">=</span> data_<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span>seq_length<span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">]</span>
y <span class="token operator">=</span> data_<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>data_.shape -&gt; (43656, 144, 11)
x.shape -&gt; (43656, 120, 11)
y.shape -&gt; (43656,)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>划分训练集和验证集</strong><ul><li>训练集80%，验证集20%</li><li>数据标准化</li></ul></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>split_boundary <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>data_<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0.8</span><span class="token punctuation">)</span>
train_x <span class="token operator">=</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span> split_boundary<span class="token punctuation">]</span>
train_y <span class="token operator">=</span> y<span class="token punctuation">[</span><span class="token punctuation">:</span> split_boundary<span class="token punctuation">]</span>
test_x <span class="token operator">=</span> x<span class="token punctuation">[</span>split_boundary<span class="token punctuation">:</span><span class="token punctuation">]</span>
test_y <span class="token operator">=</span> y<span class="token punctuation">[</span>split_boundary<span class="token punctuation">:</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>train_x.shape, train_y.shape, test_x.shape, test_y.shape
-&gt; ((34924, 120, 11), (34924,), (8732, 120, 11), (8732,))
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>mean <span class="token operator">=</span> train_x<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
std <span class="token operator">=</span> train_x<span class="token punctuation">.</span>std<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>

train_x <span class="token operator">=</span> <span class="token punctuation">(</span>train_x <span class="token operator">-</span> mean<span class="token punctuation">)</span> <span class="token operator">/</span> std
test_x <span class="token operator">=</span> <span class="token punctuation">(</span>test_x <span class="token operator">-</span> mean<span class="token punctuation">)</span> <span class="token operator">/</span> std
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>创建迭代器</strong>（DataLoader） <ul><li>自定义Dataset类</li><li>创建DataLoader</li></ul></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">my_dataset</span><span class="token punctuation">(</span>Dataset<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> feature<span class="token punctuation">,</span> labels<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>feature <span class="token operator">=</span> feature
        self<span class="token punctuation">.</span>labels <span class="token operator">=</span> labels

    <span class="token keyword">def</span> <span class="token function">__getitem__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>feature<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>labels<span class="token punctuation">[</span>index<span class="token punctuation">]</span>

    <span class="token keyword">def</span> <span class="token function">__len__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>feature<span class="token punctuation">)</span>

train_ds <span class="token operator">=</span> my_dataset<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span>
test_ds <span class="token operator">=</span> my_dataset<span class="token punctuation">(</span>test_x<span class="token punctuation">,</span> test_y<span class="token punctuation">)</span>

BATCH_SIZE <span class="token operator">=</span> <span class="token number">256</span>
train_dl <span class="token operator">=</span> DataLoader<span class="token punctuation">(</span>train_ds<span class="token punctuation">,</span> batch_size<span class="token operator">=</span>BATCH_SIZE<span class="token punctuation">,</span> shuffle<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
test_dl <span class="token operator">=</span> DataLoader<span class="token punctuation">(</span>test_ds<span class="token punctuation">,</span> batch_size<span class="token operator">=</span>BATCH_SIZE<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建模型并训练" tabindex="-1"><a class="header-anchor" href="#创建模型并训练" aria-hidden="true">#</a> 创建模型并训练</h3><ul><li><p>模型使用LSTM模型+两层全连接</p></li><li><p>回归分析</p><ul><li>损失函数用均方差</li><li>不需要输出acc</li></ul></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>hidden_size <span class="token operator">=</span> <span class="token number">64</span>
device <span class="token operator">=</span> torch<span class="token punctuation">.</span>device<span class="token punctuation">(</span><span class="token string">&#39;cuda&#39;</span> <span class="token keyword">if</span> torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token string">&#39;cpu&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Net</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> hidden_size<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span>Net<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>rnn <span class="token operator">=</span> nn<span class="token punctuation">.</span>LSTM<span class="token punctuation">(</span>train_x<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> hidden_size<span class="token operator">=</span>hidden_size<span class="token punctuation">,</span> batch_first<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>fc1 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>hidden_size<span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>fc2 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> inputs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        _<span class="token punctuation">,</span> s_o <span class="token operator">=</span> self<span class="token punctuation">.</span>rnn<span class="token punctuation">(</span>inputs<span class="token punctuation">)</span>
        x <span class="token operator">=</span> s_o<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
        x <span class="token operator">=</span> F<span class="token punctuation">.</span>dropout<span class="token punctuation">(</span>F<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>self<span class="token punctuation">.</span>fc1<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        x <span class="token operator">=</span> self<span class="token punctuation">.</span>fc2<span class="token punctuation">(</span>x<span class="token punctuation">)</span>         <span class="token comment"># 128 * 1</span>
        <span class="token keyword">return</span> torch<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token comment"># 128</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>model <span class="token operator">=</span> Net<span class="token punctuation">(</span>hidden_size<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span>

loss_fn <span class="token operator">=</span> nn<span class="token punctuation">.</span>MSELoss<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 回归分析</span>
opt <span class="token operator">=</span> torch<span class="token punctuation">.</span>optim<span class="token punctuation">.</span>Adam<span class="token punctuation">(</span>model<span class="token punctuation">.</span>parameters<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> lr<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span>
exp_lr_scheduler <span class="token operator">=</span> lr_scheduler<span class="token punctuation">.</span>StepLR<span class="token punctuation">(</span>opt<span class="token punctuation">,</span> step_size<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">,</span> gamma<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span>
epochs <span class="token operator">=</span> <span class="token number">60</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>train_loss<span class="token punctuation">,</span> test_loss <span class="token operator">=</span> common<span class="token punctuation">.</span>ModelTrainer<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reg_fit<span class="token punctuation">(</span>epochs<span class="token punctuation">,</span> train_dl<span class="token punctuation">,</span> test_dl<span class="token punctuation">,</span> model<span class="token punctuation">,</span> loss_fn<span class="token punctuation">,</span> opt<span class="token punctuation">,</span> exp_lr_scheduler<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,27),o=[e];function c(l,i){return s(),a("div",null,o)}const d=n(p,[["render",c],["__file","RNN实例.html.vue"]]);export{d as default};
