import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,f as t}from"./app-OTaO6_y0.js";const p={},e=t(`<h1 id="dataset数据输入" tabindex="-1"><a class="header-anchor" href="#dataset数据输入" aria-hidden="true">#</a> Dataset数据输入</h1><h2 id="两种方式" tabindex="-1"><a class="header-anchor" href="#两种方式" aria-hidden="true">#</a> 两种方式</h2><ul><li><p><code>torchvision.datasets.ImageFolder</code></p></li><li><p>自定义类继承<code>dataset</code>类</p></li></ul><h2 id="imagefolder" tabindex="-1"><a class="header-anchor" href="#imagefolder" aria-hidden="true">#</a> ImageFolder</h2><h3 id="整理文件夹" tabindex="-1"><a class="header-anchor" href="#整理文件夹" aria-hidden="true">#</a> 整理文件夹</h3><ul><li>将一个散乱的图片文件夹整理成按训练集和验证集且按标签分类的多级文件夹</li><li>4weather <ul><li><p>train</p><ul><li>cloudy</li><li>rain</li><li>shine</li><li>sunrise</li></ul></li><li><p>test</p><ul><li>cloudy</li><li>rain</li><li>shine</li><li>sunrise</li></ul></li></ul></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>base_dir <span class="token operator">=</span> <span class="token string">r&#39;./data/4weather&#39;</span>					<span class="token comment"># 按标签分类的数据集文件夹路径</span>
img_dir <span class="token operator">=</span> <span class="token string">r&#39;./data/4weather_imgs&#39;</span>				<span class="token comment"># 散乱图片文件夹路径</span>
specises <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;cloudy&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;rain&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;shine&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;sunrise&#39;</span><span class="token punctuation">]</span>	<span class="token comment"># 图片类别</span>
train_dir <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>base_dir<span class="token punctuation">,</span> <span class="token string">&#39;train&#39;</span><span class="token punctuation">)</span>		<span class="token comment"># 训练集路径</span>
test_dir <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>base_dir<span class="token punctuation">,</span> <span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span>		<span class="token comment"># 验证集路径</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isdir<span class="token punctuation">(</span>base_dir<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># 判断是否有数据集文件夹，没有则创建</span>
    os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>base_dir<span class="token punctuation">)</span>
    os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>train_dir<span class="token punctuation">)</span>
    os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>test_dir<span class="token punctuation">)</span>
    <span class="token keyword">for</span> train_or_test <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">&#39;train&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token comment"># 循环在训练集和验证集中创建四种类型的文件夹</span>
        <span class="token keyword">for</span> spec <span class="token keyword">in</span> specises<span class="token punctuation">:</span>
            os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>base_dir<span class="token punctuation">,</span> train_or_test<span class="token punctuation">,</span> spec<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">for</span> i<span class="token punctuation">,</span> img <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>img_dir<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># 将图片根据类别分别搬运到训练集和验证集文件夹中</span>
    <span class="token keyword">for</span> spec <span class="token keyword">in</span> specises<span class="token punctuation">:</span>
        <span class="token keyword">if</span> spec <span class="token keyword">in</span> img<span class="token punctuation">:</span>
            src <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>img_dir<span class="token punctuation">,</span> img<span class="token punctuation">)</span> <span class="token comment"># 原始目录</span>
            <span class="token keyword">if</span> i<span class="token operator">%</span><span class="token number">5</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
                des <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>base_dir<span class="token punctuation">,</span> <span class="token string">&#39;test&#39;</span><span class="token punctuation">,</span> spec<span class="token punctuation">,</span> img<span class="token punctuation">)</span> <span class="token comment"># test目标目录</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                des <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>base_dir<span class="token punctuation">,</span> <span class="token string">&#39;train&#39;</span><span class="token punctuation">,</span> spec<span class="token punctuation">,</span> img<span class="token punctuation">)</span> <span class="token comment"># train目标目录</span>
            shutil<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>src<span class="token punctuation">,</span> des<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建dataloader" tabindex="-1"><a class="header-anchor" href="#创建dataloader" aria-hidden="true">#</a> 创建dataloader</h3><ul><li>利用分完类的多级文件夹创建dataloader</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 初始化转换器</span>
transform <span class="token operator">=</span> transforms<span class="token punctuation">.</span>Compose<span class="token punctuation">(</span><span class="token punctuation">[</span> 
    transforms<span class="token punctuation">.</span>Resize<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">96</span><span class="token punctuation">,</span> <span class="token number">96</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment"># 将大小不一的图片重置为96*96的尺寸</span>
    transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment"># 将图片数据转换为tensor</span>
    transforms<span class="token punctuation">.</span>Normalize<span class="token punctuation">(</span>mean<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> std<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 标准化（均值，方差）</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># 从文件夹中读取数据集</span>
train_ds <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>ImageFolder<span class="token punctuation">(</span>root<span class="token operator">=</span>train_dir<span class="token punctuation">,</span> transform<span class="token operator">=</span>transform<span class="token punctuation">)</span>
test_ds <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>ImageFolder<span class="token punctuation">(</span>root<span class="token operator">=</span>test_dir<span class="token punctuation">,</span> transform<span class="token operator">=</span>transform<span class="token punctuation">)</span>
<span class="token comment"># 创建dataloader</span>
train_dl <span class="token operator">=</span> DataLoader<span class="token punctuation">(</span>train_ds<span class="token punctuation">,</span> batch_size<span class="token operator">=</span>BATCHSIZE<span class="token punctuation">,</span> shuffle<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
test_dl <span class="token operator">=</span> DataLoader<span class="token punctuation">(</span>train_ds<span class="token punctuation">,</span> batch_size<span class="token operator">=</span>BATCHSIZE<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>train_ds<span class="token punctuation">.</span>class_to_idx <span class="token comment"># 每个类别对应的标签</span>
<span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span><span class="token string">&#39;cloudy&#39;</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;rain&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;shine&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;sunrise&#39;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="特点" tabindex="-1"><a class="header-anchor" href="#特点" aria-hidden="true">#</a> 特点</h3><ul><li>根据文件夹名进行分类</li><li>需要整理文件夹</li></ul><h2 id="自定义子类" tabindex="-1"><a class="header-anchor" href="#自定义子类" aria-hidden="true">#</a> 自定义子类</h2><h3 id="定义子类" tabindex="-1"><a class="header-anchor" href="#定义子类" aria-hidden="true">#</a> 定义子类</h3><ul><li>定义<code>dataset</code>类继承<code>data.Dataset</code></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">MyDataset</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>Dataset<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> img_paths<span class="token punctuation">,</span> labels<span class="token punctuation">,</span> transform<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># 所有图片地址列表，所有标签列表，transforms</span>
        self<span class="token punctuation">.</span>imgs <span class="token operator">=</span> img_paths
        self<span class="token punctuation">.</span>labels <span class="token operator">=</span> labels
        self<span class="token punctuation">.</span>transform <span class="token operator">=</span> transform

    <span class="token comment"># 切片方法 -&gt; MyDataset[index]</span>
    <span class="token keyword">def</span> <span class="token function">__getitem__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">:</span>
        img <span class="token operator">=</span> self<span class="token punctuation">.</span>imgs<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
        label <span class="token operator">=</span> self<span class="token punctuation">.</span>labels<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
        pil_img <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">.</span>convert<span class="token punctuation">(</span><span class="token string">&#39;RGB&#39;</span><span class="token punctuation">)</span>	<span class="token comment"># 将pil对象统一转换为RGB模式</span>
        data <span class="token operator">=</span> self<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>pil_img<span class="token punctuation">)</span>				<span class="token comment"># 图片转换为输入数据</span>
        <span class="token keyword">return</span> data<span class="token punctuation">,</span> label

    <span class="token comment"># 获取长度 -&gt; len(MyDataset)</span>
    <span class="token keyword">def</span> <span class="token function">__len__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>imgs<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="处理子类输入" tabindex="-1"><a class="header-anchor" href="#处理子类输入" aria-hidden="true">#</a> 处理子类输入</h3><ul><li>定义常量</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>all_img_paths <span class="token operator">=</span> glob<span class="token punctuation">.</span>glob<span class="token punctuation">(</span><span class="token string">r&#39;..\\..\\data\\4weather_imgs\\*.jpg&#39;</span><span class="token punctuation">)</span>	<span class="token comment"># 利用glob获取所有图片路径 -&gt; list</span>
species <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;cloudy&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rain&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shine&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sunrise&#39;</span><span class="token punctuation">]</span>				<span class="token comment"># 图片类别</span>
BATCH_SIZE <span class="token operator">=</span> <span class="token number">16</span>													<span class="token comment"># 批次大小</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>根据图片文件名称获取所有标签列表</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>all_labels <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> img <span class="token keyword">in</span> all_img_paths<span class="token punctuation">:</span>
    <span class="token keyword">for</span> i<span class="token punctuation">,</span> c <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>species<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> c <span class="token keyword">in</span> img<span class="token punctuation">:</span>
            all_labels<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>用相同的随机索引打乱图片列表和标签列表</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>index <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>permutation<span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>all_img_paths<span class="token punctuation">)</span><span class="token punctuation">)</span>
all_img_paths <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>all_img_paths<span class="token punctuation">)</span><span class="token punctuation">[</span>index<span class="token punctuation">]</span>
all_labels <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>all_labels<span class="token punctuation">)</span><span class="token punctuation">[</span>index<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>切片分出训练集和验证集</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>all_img_paths<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.8</span><span class="token punctuation">)</span>

train_imgs <span class="token operator">=</span> all_img_paths<span class="token punctuation">[</span><span class="token punctuation">:</span>s<span class="token punctuation">]</span>
train_labels <span class="token operator">=</span> all_labels<span class="token punctuation">[</span><span class="token punctuation">:</span>s<span class="token punctuation">]</span>

test_imgs <span class="token operator">=</span> all_img_paths<span class="token punctuation">[</span>s<span class="token punctuation">:</span><span class="token punctuation">]</span>
test_labels <span class="token operator">=</span> all_labels<span class="token punctuation">[</span>s<span class="token punctuation">:</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建dataloader-1" tabindex="-1"><a class="header-anchor" href="#创建dataloader-1" aria-hidden="true">#</a> 创建dataloader</h3><ul><li>创建<code>transformers</code> (对训练集进行数据增强)</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>train_transform <span class="token operator">=</span> transforms<span class="token punctuation">.</span>Compose<span class="token punctuation">(</span><span class="token punctuation">[</span>  <span class="token comment"># 初始化转换器</span>
    transforms<span class="token punctuation">.</span>Resize<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">224</span><span class="token punctuation">,</span> <span class="token number">224</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment"># 将大小不一的图片重置为224*224的尺寸</span>
    transforms<span class="token punctuation">.</span>RandomCrop<span class="token punctuation">(</span><span class="token number">192</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment"># 将图片随机裁剪成192*192的尺寸</span>
    transforms<span class="token punctuation">.</span>RandomHorizontalFlip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment"># 将图片随机水平翻转</span>
    transforms<span class="token punctuation">.</span>RandomRotation<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment"># 将图片随机旋转20度</span>
    transforms<span class="token punctuation">.</span>ColorJitter<span class="token punctuation">(</span>brightness<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment"># 随机改变图片的明暗度</span>
    transforms<span class="token punctuation">.</span>ColorJitter<span class="token punctuation">(</span>contrast<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment"># 随机改变图片的对比度</span>
    transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment"># 将图片数据转换为tensor</span>
    transforms<span class="token punctuation">.</span>Normalize<span class="token punctuation">(</span>mean<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> std<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 标准化（均值，方差）</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>

test_transform <span class="token operator">=</span> transforms<span class="token punctuation">.</span>Compose<span class="token punctuation">(</span><span class="token punctuation">[</span>
    transforms<span class="token punctuation">.</span>Resize<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">96</span><span class="token punctuation">,</span> <span class="token number">96</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>创建<code>dataset</code></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>train_ds <span class="token operator">=</span> MyDataset<span class="token punctuation">(</span>train_imgs<span class="token punctuation">,</span> train_labels<span class="token punctuation">,</span> train_transform<span class="token punctuation">)</span>
test_ds <span class="token operator">=</span> MyDataset<span class="token punctuation">(</span>test_imgs<span class="token punctuation">,</span> test_labels<span class="token punctuation">,</span> test_transform<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>创建<code>dataloader</code></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>train_dl <span class="token operator">=</span> data<span class="token punctuation">.</span>DataLoader<span class="token punctuation">(</span>train_ds<span class="token punctuation">,</span> batch_size<span class="token operator">=</span>BATCH_SIZE<span class="token punctuation">,</span> shuffle<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
test_dl <span class="token operator">=</span> data<span class="token punctuation">.</span>DataLoader<span class="token punctuation">(</span>test_ds<span class="token punctuation">,</span> batch_size<span class="token operator">=</span>BATCH_SIZE<span class="token punctuation">,</span> <span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="特点-1" tabindex="-1"><a class="header-anchor" href="#特点-1" aria-hidden="true">#</a> 特点</h3><ul><li><p>灵活，可以在子类中添加其他操作</p></li><li><p>不用对图片文件夹进行修改</p></li><li><p>不限类型</p></li></ul>`,37),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","Dataset数据输入.html.vue"]]);export{k as default};
