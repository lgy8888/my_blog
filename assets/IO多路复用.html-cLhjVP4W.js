const e=JSON.parse('{"key":"v-49aca50e","path":"/backEnd/OS/IO%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8.html","title":"IO多路复用","lang":"zh-CN","frontmatter":{"description":"Socket 要想客户端和服务器能在网络中通信，必须得使用 Socket 编程，它是进程间通信里比较特别的方式：支持跨主机间通信。 创建 Socket 的时候，可以指定网络层使用的是 IPv4 还是 IPv6，传输层使用的是 TCP 还是 UDP 基于TCP的Socket编程 服务器的程序要先跑起来，然后等待客户端的连接和数据 服务端 服务端首先调用 ...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/my_blog/backEnd/OS/IO%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"林光远的个人笔记"}],["meta",{"property":"og:title","content":"IO多路复用"}],["meta",{"property":"og:description","content":"Socket 要想客户端和服务器能在网络中通信，必须得使用 Socket 编程，它是进程间通信里比较特别的方式：支持跨主机间通信。 创建 Socket 的时候，可以指定网络层使用的是 IPv4 还是 IPv6，传输层使用的是 TCP 还是 UDP 基于TCP的Socket编程 服务器的程序要先跑起来，然后等待客户端的连接和数据 服务端 服务端首先调用 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LGYNB"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"IO多路复用\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LGYNB\\",\\"url\\":\\"/\\"}]}"]]},"headers":[{"level":2,"title":"Socket","slug":"socket","link":"#socket","children":[{"level":3,"title":"基于TCP的Socket编程","slug":"基于tcp的socket编程","link":"#基于tcp的socket编程","children":[]},{"level":3,"title":"Socket文件描述符","slug":"socket文件描述符","link":"#socket文件描述符","children":[]}]},{"level":2,"title":"服务更多的用户","slug":"服务更多的用户","link":"#服务更多的用户","children":[{"level":3,"title":"C10K","slug":"c10k","link":"#c10k","children":[]}]},{"level":2,"title":"多进程模型","slug":"多进程模型","link":"#多进程模型","children":[{"level":3,"title":"运行流程","slug":"运行流程","link":"#运行流程","children":[]},{"level":3,"title":"存在问题","slug":"存在问题","link":"#存在问题","children":[]}]},{"level":2,"title":"多线程模型","slug":"多线程模型","link":"#多线程模型","children":[{"level":3,"title":"线程","slug":"线程","link":"#线程","children":[]},{"level":3,"title":"运行流程","slug":"运行流程-1","link":"#运行流程-1","children":[]},{"level":3,"title":"存在问题","slug":"存在问题-1","link":"#存在问题-1","children":[]}]},{"level":2,"title":"I/O多路复用","slug":"i-o多路复用","link":"#i-o多路复用","children":[{"level":3,"title":"select/poll","slug":"select-poll","link":"#select-poll","children":[]},{"level":3,"title":"epoll","slug":"epoll","link":"#epoll","children":[]}]},{"level":2,"title":"Reactor","slug":"reactor","link":"#reactor","children":[{"level":3,"title":"两个核心部分","slug":"两个核心部分","link":"#两个核心部分","children":[]},{"level":3,"title":"灵活多变的Reactor","slug":"灵活多变的reactor","link":"#灵活多变的reactor","children":[]},{"level":3,"title":"三种经典的Reactor方案","slug":"三种经典的reactor方案","link":"#三种经典的reactor方案","children":[]}]},{"level":2,"title":"Proactor","slug":"proactor","link":"#proactor","children":[{"level":3,"title":"涉及概念","slug":"涉及概念","link":"#涉及概念","children":[]},{"level":3,"title":"Reactor和Proactor的区别","slug":"reactor和proactor的区别","link":"#reactor和proactor的区别","children":[]},{"level":3,"title":"Proactor模式","slug":"proactor模式","link":"#proactor模式","children":[]},{"level":3,"title":"实用场景","slug":"实用场景","link":"#实用场景","children":[]}]}],"git":{},"readingTime":{"minutes":27.83,"words":8348},"filePathRelative":"backEnd/OS/IO多路复用.md","autoDesc":true}');export{e as data};
